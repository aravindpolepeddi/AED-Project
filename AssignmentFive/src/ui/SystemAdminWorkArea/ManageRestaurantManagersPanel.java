/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.SystemAdminWorkArea;

import business.Business;
import business.FlagClass;
import business.Restaurant.Restaurant;
import business.Restaurant.RestaurantDirectory;
import business.employee.Employee;
import business.role.RestaurantRole;
import business.role.Role;
import business.useraccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Font;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author deepv
 */
public class ManageRestaurantManagersPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageRestaurantManagersPanel
     */
    Business business;
    JPanel workAreaPanel;
    RestaurantDirectory restaurantDirectory;
    UserAccount account;
    Restaurant restaurant;
    String restaurantName;
    String managerame;
    FlagClass flag;

    public ManageRestaurantManagersPanel(Business business, UserAccount account, JPanel workAreaPanel, RestaurantDirectory restaurantDirectory) {
        initComponents();
        this.business = business;
        this.workAreaPanel = workAreaPanel;
        this.restaurantDirectory = restaurantDirectory;
        this.account = account;
        this.restaurant = new Restaurant();
        flag = new FlagClass();

        JTableHeader tableHeader = tblRestaurantManagers.getTableHeader();
        tableHeader.setFont(new Font("Segoe UI", Font.BOLD, 12));
        ((DefaultTableCellRenderer) tableHeader.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        populateRestaurantRole();
        pnlUpdate.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRestaurantManagers = new javax.swing.JTable();
        lblAddUser = new javax.swing.JLabel();
        lblManagerName = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtManagerName = new javax.swing.JTextField();
        txtUserName = new javax.swing.JTextField();
        pwdPassword = new javax.swing.JPasswordField();
        btnCreateUser = new javax.swing.JButton();
        lblPanelHeading = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        lblRestaurantName = new javax.swing.JLabel();
        txtRestaurantName = new javax.swing.JTextField();
        pnlUpdate = new javax.swing.JPanel();
        lblAddUser1 = new javax.swing.JLabel();
        lblManagerName1 = new javax.swing.JLabel();
        txtManagerName1 = new javax.swing.JTextField();
        lblRestaurantName1 = new javax.swing.JLabel();
        txtRestaurantName1 = new javax.swing.JTextField();
        lblUserName1 = new javax.swing.JLabel();
        txtUserName1 = new javax.swing.JTextField();
        lblPassword1 = new javax.swing.JLabel();
        btnUpdateSave = new javax.swing.JButton();
        txtPassword = new javax.swing.JTextField();

        setBackground(new java.awt.Color(240, 255, 255));

        btnBack.setBackground(new java.awt.Color(252, 227, 227));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 0, 0));
        btnBack.setText("BACK");
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBackMouseExited(evt);
            }
        });
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblRestaurantManagers.setBackground(new java.awt.Color(255, 255, 255));
        tblRestaurantManagers.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblRestaurantManagers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "USER NAME", "PASSWORD", "MANAGER NAME"
            }
        ));
        tblRestaurantManagers.setSelectionBackground(new java.awt.Color(153, 209, 232));
        tblRestaurantManagers.setSelectionForeground(new java.awt.Color(0, 51, 51));
        jScrollPane2.setViewportView(tblRestaurantManagers);

        lblAddUser.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAddUser.setForeground(new java.awt.Color(0, 102, 102));
        lblAddUser.setText("ADD NEW USER");

        lblManagerName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblManagerName.setText("Manager Name :");

        lblUserName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblUserName.setText("Username : ");

        lblPassword.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPassword.setText("Password : ");

        btnCreateUser.setBackground(new java.awt.Color(175, 211, 211));
        btnCreateUser.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCreateUser.setForeground(new java.awt.Color(0, 102, 102));
        btnCreateUser.setText("CREATE");
        btnCreateUser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCreateUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCreateUserMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCreateUserMouseExited(evt);
            }
        });
        btnCreateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateUserActionPerformed(evt);
            }
        });

        lblPanelHeading.setBackground(new java.awt.Color(0, 204, 255));
        lblPanelHeading.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblPanelHeading.setForeground(new java.awt.Color(0, 204, 255));
        lblPanelHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPanelHeading.setText("Restaurant Managers");

        btnDelete.setBackground(new java.awt.Color(255, 255, 255));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(153, 0, 0));
        btnDelete.setText("DELETE USER");
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDeleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDeleteMouseExited(evt);
            }
        });
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(255, 255, 255));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(0, 102, 0));
        btnUpdate.setText("UPDATE USER");
        btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnUpdateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnUpdateMouseExited(evt);
            }
        });
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblRestaurantName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblRestaurantName.setText("Restaurant Name : ");

        pnlUpdate.setBackground(new java.awt.Color(240, 255, 255));

        lblAddUser1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAddUser1.setForeground(new java.awt.Color(0, 102, 102));
        lblAddUser1.setText("UPDATE USER");

        lblManagerName1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblManagerName1.setText("Manager Name :");

        lblRestaurantName1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblRestaurantName1.setText("Restaurant Name : ");

        lblUserName1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblUserName1.setText("Username : ");

        lblPassword1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPassword1.setText("Password : ");

        btnUpdateSave.setBackground(new java.awt.Color(175, 211, 211));
        btnUpdateSave.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdateSave.setForeground(new java.awt.Color(0, 102, 102));
        btnUpdateSave.setText("UPDATE");
        btnUpdateSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdateSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnUpdateSaveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnUpdateSaveMouseExited(evt);
            }
        });
        btnUpdateSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlUpdateLayout = new javax.swing.GroupLayout(pnlUpdate);
        pnlUpdate.setLayout(pnlUpdateLayout);
        pnlUpdateLayout.setHorizontalGroup(
            pnlUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUpdateLayout.createSequentialGroup()
                .addGroup(pnlUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlUpdateLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(lblAddUser1))
                    .addGroup(pnlUpdateLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(pnlUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblManagerName1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblRestaurantName1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblUserName1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPassword1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUserName1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRestaurantName1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtManagerName1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdateSave)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlUpdateLayout.setVerticalGroup(
            pnlUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUpdateLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblAddUser1)
                .addGap(18, 18, 18)
                .addGroup(pnlUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblManagerName1)
                    .addComponent(txtManagerName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(pnlUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRestaurantName1)
                    .addComponent(txtRestaurantName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUserName1)
                    .addComponent(txtUserName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword1)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(btnUpdateSave)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pnlUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(80, 80, 80))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnDelete)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnUpdate))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblManagerName, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblRestaurantName, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblUserName, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblPassword, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtUserName, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(pwdPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtRestaurantName, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtManagerName, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnCreateUser)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblAddUser)
                                .addGap(72, 72, 72))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(lblPanelHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(btnBack)))
                .addGap(53, 53, 53))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(lblPanelHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(btnBack)))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblAddUser)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblManagerName)
                            .addComponent(txtManagerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRestaurantName)
                            .addComponent(txtRestaurantName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUserName)
                            .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPassword)
                            .addComponent(pwdPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addComponent(btnCreateUser)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addComponent(pnlUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateUserActionPerformed
        if (validations()) {
            String userName = txtUserName.getText();
            String password = pwdPassword.getText();

            if (!business.getUserAccountDirectory().checkIfUsernameIsUnique(userName)) {
                JOptionPane.showMessageDialog(null, "UserName already taken!");
                txtUserName.setText("");
                pwdPassword.setText("");
            } else {
                managerame = txtManagerName.getText();
                restaurantName = txtRestaurantName.getText();
                Employee employee = new Employee(managerame);
                RestaurantRole role = new RestaurantRole();
                business.getUserAccountDirectory().createUserAccount(userName, password, employee, role);

                JOptionPane.showMessageDialog(null, "User Account added successfully.");
                txtManagerName.setText("");
                txtRestaurantName.setText("");
                txtUserName.setText("");
                pwdPassword.setText("");
                populateRestaurantRole();

                restaurant = restaurantDirectory.addRestaurant();
                restaurant.setManagerName(managerame);
                restaurant.setName(restaurantName);
                business.setRestaurantDirectory(restaurantDirectory);
            }
        }
    }//GEN-LAST:event_btnCreateUserActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        workAreaPanel.remove(this);
        CardLayout layout = (CardLayout) workAreaPanel.getLayout();
        layout.previous(workAreaPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRowIndex = tblRestaurantManagers.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a User");
            return;
        } else {
            DefaultTableModel model = (DefaultTableModel) tblRestaurantManagers.getModel();
            UserAccount selectedUserAccount = (UserAccount) model.getValueAt(selectedRowIndex, 0);
            UserAccount accountToBeRemoved = business.getUserAccountDirectory().fetchUserAccountUsingUserName(selectedUserAccount.getUsername());
            business.getUserAccountDirectory().removeAccount(accountToBeRemoved);
            JOptionPane.showMessageDialog(null, "User Account deleted successfully.");
            populateRestaurantRole();

            Restaurant restaurant = restaurantDirectory.findRestaurant(selectedUserAccount.getEmployee().getName());
            String restaurantName = restaurant.getName();

            Restaurant restaurantToBeRemoved = restaurantDirectory.findRestaurant(selectedUserAccount.getEmployee().getName());
            restaurantDirectory.removeRestaurant(restaurantToBeRemoved);

            business.getOrderDirectory().removeSelectedRestaurantOrders(restaurantName);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int selectedRowIndex = tblRestaurantManagers.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a User");
            return;
        } else {
            DefaultTableModel model = (DefaultTableModel) tblRestaurantManagers.getModel();
            UserAccount selectedUserAccount = (UserAccount) model.getValueAt(selectedRowIndex, 0);
            pnlUpdate.setVisible(true);
            restaurant = restaurantDirectory.findRestaurant(selectedUserAccount.getEmployee().getName());
            txtManagerName1.setText(selectedUserAccount.getEmployee().getName());
            txtRestaurantName1.setText(restaurant.getName());
            txtUserName1.setText(selectedUserAccount.getUsername());
            txtPassword.setText(selectedUserAccount.getPassword());
            flag.setRestaurantManagerName(selectedUserAccount.getEmployee().getName());
            flag.setUserName(selectedUserAccount.getUsername());
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnUpdateSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateSaveActionPerformed
        if (updateValidations()) {

            String oldRestaurantName;
            UserAccount updatedAccount = business.getUserAccountDirectory().fetchUserAccountUsingUserName(flag.getUserName());
            updatedAccount.setUsername(txtUserName1.getText());
            updatedAccount.setPassword(txtPassword.getText());
            Employee employee = new Employee();
            employee.setName(txtManagerName1.getText());
            updatedAccount.setEmployee(employee);

            for (int i = 0; i <= business.getUserAccountDirectory().getUserAccountList().size() - 1; i++) {
                if (business.getUserAccountDirectory().getUserAccountList().get(i).getUsername().equals(flag.getUserName())) {
                    business.getUserAccountDirectory().getUserAccountList().set(i, updatedAccount);
                }
            }

            Restaurant updatedRestaurant = restaurantDirectory.findRestaurant(flag.getRestaurantManagerName());
            oldRestaurantName = updatedRestaurant.getName();
            updatedRestaurant.setName(txtRestaurantName1.getText());
            updatedRestaurant.setManagerName(txtManagerName1.getText());

            for (int i = 0; i <= restaurantDirectory.getRestaurants().size() - 1; i++) {
                if (restaurantDirectory.getRestaurants().get(i).getManagerName().equals(flag.getRestaurantManagerName())) {
                    restaurantDirectory.getRestaurants().set(i, updatedRestaurant);
                }
            }

            business.getOrderDirectory().updateRestaurantNameInOrders(oldRestaurantName, txtRestaurantName1.getText());
            JOptionPane.showMessageDialog(null, "User Account updated successfully.");
            pnlUpdate.setVisible(false);
            populateRestaurantRole();
        }
    }//GEN-LAST:event_btnUpdateSaveActionPerformed

    private void btnBackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseEntered
        btnBack.setBackground(new Color(248, 186, 186));
    }//GEN-LAST:event_btnBackMouseEntered

    private void btnBackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseExited
        btnBack.setBackground(Color.white);
    }//GEN-LAST:event_btnBackMouseExited

    private void btnDeleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseEntered
        btnDelete.setBackground(new Color(248, 186, 186));
    }//GEN-LAST:event_btnDeleteMouseEntered

    private void btnDeleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseExited
        btnDelete.setBackground(Color.white);
    }//GEN-LAST:event_btnDeleteMouseExited

    private void btnUpdateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseEntered
        btnUpdate.setBackground(new Color(194, 240, 194));
    }//GEN-LAST:event_btnUpdateMouseEntered

    private void btnUpdateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseExited
        btnUpdate.setBackground(Color.white);
    }//GEN-LAST:event_btnUpdateMouseExited

    private void btnCreateUserMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCreateUserMouseEntered
        btnCreateUser.setBackground(new Color(107, 174, 174));
    }//GEN-LAST:event_btnCreateUserMouseEntered

    private void btnCreateUserMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCreateUserMouseExited
        btnCreateUser.setBackground(new Color(175, 211, 211));
    }//GEN-LAST:event_btnCreateUserMouseExited

    private void btnUpdateSaveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateSaveMouseEntered
        btnUpdateSave.setBackground(new Color(107, 174, 174));
    }//GEN-LAST:event_btnUpdateSaveMouseEntered

    private void btnUpdateSaveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateSaveMouseExited
        btnUpdateSave.setBackground(new Color(175, 211, 211));
    }//GEN-LAST:event_btnUpdateSaveMouseExited

    private boolean validations() {
        boolean validData = true;
        if (txtManagerName == null || txtManagerName.getText().isBlank() || txtManagerName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter the Manager Name.");
            validData = false;
            return validData;
        } else if (txtRestaurantName == null || txtRestaurantName.getText().isBlank() || txtRestaurantName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter the Restaurant Name.");
            validData = false;
            return validData;
        } else if (txtUserName.getText().isBlank() || txtUserName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter a valid User Name.");
            validData = false;
            return validData;
        } else if (pwdPassword.getText().isBlank() || pwdPassword.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter the Password.");
            validData = false;
            return validData;
        } else {
            return true;
        }
    }

    private boolean updateValidations() {
        boolean validData = true;
        if (txtManagerName1 == null || txtManagerName1.getText().isBlank() || txtManagerName1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter the Manager Name.");
            validData = false;
            return validData;
        } else if (txtRestaurantName1 == null || txtRestaurantName1.getText().isBlank() || txtRestaurantName1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter the Restaurant Name.");
            validData = false;
            return validData;
        } else if (txtUserName1.getText().isBlank() || txtUserName1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter a valid User Name.");
            validData = false;
            return validData;
        } else if (txtPassword.getText().isBlank() || txtPassword.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter the Password.");
            validData = false;
            return validData;
        } else {
            return true;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateUser;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdateSave;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAddUser;
    private javax.swing.JLabel lblAddUser1;
    private javax.swing.JLabel lblManagerName;
    private javax.swing.JLabel lblManagerName1;
    private javax.swing.JLabel lblPanelHeading;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPassword1;
    private javax.swing.JLabel lblRestaurantName;
    private javax.swing.JLabel lblRestaurantName1;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JLabel lblUserName1;
    private javax.swing.JPanel pnlUpdate;
    private javax.swing.JPasswordField pwdPassword;
    private javax.swing.JTable tblRestaurantManagers;
    private javax.swing.JTextField txtManagerName;
    private javax.swing.JTextField txtManagerName1;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtRestaurantName;
    private javax.swing.JTextField txtRestaurantName1;
    private javax.swing.JTextField txtUserName;
    private javax.swing.JTextField txtUserName1;
    // End of variables declaration//GEN-END:variables

    private void populateRestaurantRole() {
        DefaultTableModel model = (DefaultTableModel) tblRestaurantManagers.getModel();
        model.setRowCount(0);

        for (UserAccount userAccount : business.getUserAccountDirectory().getUserAccountList()) {
            Object[] row = new Object[3];
            RestaurantRole role = new RestaurantRole();
            if (userAccount.getRole() != null && userAccount.getRole().type != null && userAccount.getRole().type == Role.RoleType.RestaurantAdmin) {
                row[0] = userAccount;
                row[1] = userAccount.getPassword();
                row[2] = userAccount.getEmployee().getName();
                model.addRow(row);
            }
        }
    }
}
