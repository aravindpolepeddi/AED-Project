/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.DeliveryWorkArea;

import business.Business;
import business.Customer.CustomerDirectory;
import business.DeliveryStaff.DeliveryStaff;
import business.DeliveryStaff.DeliveryStaffDirectory;
import business.Order.Order;
import business.Order.OrderDirectory;
import business.Restaurant.RestaurantDirectory;
import business.useraccount.UserAccount;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author deepv
 */
public class DeliveryAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DeliveryAreaJPanel
     */
    RestaurantDirectory restaurantDirectory;
    CustomerDirectory customerDirectory;
    OrderDirectory orderDirectory;
    DeliveryStaffDirectory deliveryStaffDirectory;
    DeliveryStaff staff;
    UserAccount account;
    String userName;
    Order order;
    int orderId;
    String staffMemberName;

    public DeliveryAreaJPanel(JPanel userProcessContainer, UserAccount account, Business business) {
        initComponents();
        this.restaurantDirectory = restaurantDirectory;
        this.customerDirectory = customerDirectory;
        this.orderDirectory = orderDirectory;
        this.deliveryStaffDirectory = deliveryStaffDirectory;
        this.account = account;
        this.order = orderDirectory.findOrderByDeliveryStaffName(account.getEmployee().getName());
        orderId = order.getId();
        userName = account.getUsername();
        this.staff = deliveryStaffDirectory.findStaffByUserName(userName);
        lblGreeting.setText(staff.getFirstName() == null && staff.getLastName() == null ? "Welcome " + staff.getUserName() + "!" : "Welcome " + staff.getFirstName().toUpperCase() + " " + staff.getLastName().toUpperCase() + "!");

        JTableHeader tableHeader = tblOrders.getTableHeader();
        tableHeader.setFont(new Font("Segoe UI", Font.BOLD, 12));
        ((DefaultTableCellRenderer) tableHeader.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        if (orderDirectory != null) {
            populateOrders(null);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        NavigationPanel = new javax.swing.JPanel();
        btnEditProfile = new javax.swing.JButton();
        btnCompletedOrders = new javax.swing.JButton();
        btnPendingOrders = new javax.swing.JButton();
        btnAllOrders = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        MainWorkAreaPanel = new javax.swing.JPanel();
        lblGreeting = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        EditProfilePanel = new javax.swing.JPanel();
        lblHeader = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblFirstName = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        lblLastName = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblMobileNum = new javax.swing.JLabel();
        txtMobileNum = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();

        NavigationPanel.setBackground(new java.awt.Color(0, 51, 51));

        btnEditProfile.setBackground(new java.awt.Color(206, 217, 217));
        btnEditProfile.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEditProfile.setForeground(new java.awt.Color(0, 51, 51));
        btnEditProfile.setText("EDIT PROFILE");
        btnEditProfile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditProfile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEditProfileMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEditProfileMouseExited(evt);
            }
        });
        btnEditProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditProfileActionPerformed(evt);
            }
        });

        btnCompletedOrders.setBackground(new java.awt.Color(206, 217, 217));
        btnCompletedOrders.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCompletedOrders.setForeground(new java.awt.Color(0, 51, 51));
        btnCompletedOrders.setText("COMPLETED ORDERS");
        btnCompletedOrders.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCompletedOrders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCompletedOrdersMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCompletedOrdersMouseExited(evt);
            }
        });
        btnCompletedOrders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompletedOrdersActionPerformed(evt);
            }
        });

        btnPendingOrders.setBackground(new java.awt.Color(206, 217, 217));
        btnPendingOrders.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnPendingOrders.setForeground(new java.awt.Color(0, 51, 51));
        btnPendingOrders.setText("PENDING ORDERS");
        btnPendingOrders.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPendingOrders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPendingOrdersMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPendingOrdersMouseExited(evt);
            }
        });
        btnPendingOrders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPendingOrdersActionPerformed(evt);
            }
        });

        btnAllOrders.setBackground(new java.awt.Color(206, 217, 217));
        btnAllOrders.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAllOrders.setForeground(new java.awt.Color(0, 51, 51));
        btnAllOrders.setText("ALL ORDERS");
        btnAllOrders.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAllOrders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAllOrdersMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAllOrdersMouseExited(evt);
            }
        });
        btnAllOrders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllOrdersActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(178, 209, 201));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel1.setText("<html><span font color=\"rgb(178, 209, 201)\">C</span> <span font color=\"rgb(0,153,153)\">!<span></html> ");

        javax.swing.GroupLayout NavigationPanelLayout = new javax.swing.GroupLayout(NavigationPanel);
        NavigationPanel.setLayout(NavigationPanelLayout);
        NavigationPanelLayout.setHorizontalGroup(
            NavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavigationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(NavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NavigationPanelLayout.createSequentialGroup()
                        .addGroup(NavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnPendingOrders, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEditProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCompletedOrders, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16))
                    .addGroup(NavigationPanelLayout.createSequentialGroup()
                        .addComponent(btnAllOrders, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(NavigationPanelLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        NavigationPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAllOrders, btnCompletedOrders, btnEditProfile, btnPendingOrders});

        NavigationPanelLayout.setVerticalGroup(
            NavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavigationPanelLayout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(btnEditProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94)
                .addComponent(btnCompletedOrders, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPendingOrders, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAllOrders, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(89, Short.MAX_VALUE))
        );

        NavigationPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAllOrders, btnCompletedOrders, btnEditProfile, btnPendingOrders});

        jSplitPane1.setLeftComponent(NavigationPanel);

        jLayeredPane1.setLayout(new java.awt.CardLayout());

        MainWorkAreaPanel.setBackground(new java.awt.Color(240, 255, 255));

        lblGreeting.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblGreeting.setForeground(new java.awt.Color(0, 153, 153));
        lblGreeting.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblGreeting.setText("<delivery staff greeting>");

        tblOrders.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "CUSTOMER", "RESTAURANT", "ORDER TIME", "STATUS", "ADDRESS"
            }
        ));
        jScrollPane1.setViewportView(tblOrders);

        jButton1.setBackground(new java.awt.Color(255, 204, 102));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 102, 51));
        jButton1.setText("DELIVER ORDER");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MainWorkAreaPanelLayout = new javax.swing.GroupLayout(MainWorkAreaPanel);
        MainWorkAreaPanel.setLayout(MainWorkAreaPanelLayout);
        MainWorkAreaPanelLayout.setHorizontalGroup(
            MainWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainWorkAreaPanelLayout.createSequentialGroup()
                .addGroup(MainWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainWorkAreaPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblGreeting, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE))
                    .addGroup(MainWorkAreaPanelLayout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(MainWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        MainWorkAreaPanelLayout.setVerticalGroup(
            MainWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainWorkAreaPanelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(lblGreeting)
                .addGap(46, 46, 46)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(263, Short.MAX_VALUE))
        );

        jLayeredPane1.add(MainWorkAreaPanel, "card2");

        EditProfilePanel.setBackground(new java.awt.Color(240, 255, 255));

        lblHeader.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblHeader.setForeground(new java.awt.Color(0, 153, 153));
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("Edit Profile");

        btnBack.setBackground(new java.awt.Color(255, 204, 204));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 0, 51));
        btnBack.setText("BACK");
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblFirstName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblFirstName.setForeground(new java.awt.Color(0, 51, 51));
        lblFirstName.setText("FIRST NAME : ");

        txtFirstName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtFirstName.setForeground(new java.awt.Color(0, 102, 102));
        txtFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstNameActionPerformed(evt);
            }
        });

        lblLastName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLastName.setForeground(new java.awt.Color(0, 51, 51));
        lblLastName.setText("LAST NAME : ");

        txtLastName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtLastName.setForeground(new java.awt.Color(0, 102, 102));
        txtLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastNameActionPerformed(evt);
            }
        });

        lblEmail.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(0, 51, 51));
        lblEmail.setText("EMAIL : ");

        txtEmail.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtEmail.setForeground(new java.awt.Color(0, 102, 102));
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        lblMobileNum.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblMobileNum.setForeground(new java.awt.Color(0, 51, 51));
        lblMobileNum.setText("MOBILE NUMBER : ");

        txtMobileNum.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtMobileNum.setForeground(new java.awt.Color(0, 102, 102));
        txtMobileNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMobileNumActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(215, 254, 211));
        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSave.setForeground(new java.awt.Color(72, 151, 64));
        btnSave.setText("SAVE CHANGES");
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EditProfilePanelLayout = new javax.swing.GroupLayout(EditProfilePanel);
        EditProfilePanel.setLayout(EditProfilePanelLayout);
        EditProfilePanelLayout.setHorizontalGroup(
            EditProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditProfilePanelLayout.createSequentialGroup()
                .addContainerGap(555, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(35, 35, 35))
            .addGroup(EditProfilePanelLayout.createSequentialGroup()
                .addGap(201, 201, 201)
                .addGroup(EditProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditProfilePanelLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(lblHeader))
                    .addGroup(EditProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditProfilePanelLayout.createSequentialGroup()
                            .addComponent(lblMobileNum)
                            .addGap(18, 18, 18)
                            .addComponent(txtMobileNum, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditProfilePanelLayout.createSequentialGroup()
                            .addComponent(lblEmail)
                            .addGap(18, 18, 18)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditProfilePanelLayout.createSequentialGroup()
                            .addGroup(EditProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblFirstName)
                                .addComponent(lblLastName))
                            .addGap(18, 18, 18)
                            .addGroup(EditProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditProfilePanelLayout.createSequentialGroup()
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(32, 32, 32))))
                .addContainerGap(214, Short.MAX_VALUE))
        );
        EditProfilePanelLayout.setVerticalGroup(
            EditProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditProfilePanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHeader)
                .addGap(80, 80, 80)
                .addGroup(EditProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstName)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(EditProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLastName)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(EditProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(EditProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMobileNum)
                    .addComponent(txtMobileNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(btnSave)
                .addContainerGap(180, Short.MAX_VALUE))
        );

        jLayeredPane1.add(EditProfilePanel, "card3");

        jSplitPane1.setRightComponent(jLayeredPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditProfileActionPerformed
        switchPanels(EditProfilePanel);
        txtFirstName.setText(staff.getFirstName());
        txtLastName.setText(staff.getLastName());
        txtEmail.setText(staff.getEmail());
        txtMobileNum.setText(staff.getPhoneNumber());
    }//GEN-LAST:event_btnEditProfileActionPerformed

    private void btnCompletedOrdersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompletedOrdersActionPerformed
        populateOrders("COMPLETED ORDERS");
    }//GEN-LAST:event_btnCompletedOrdersActionPerformed

    private void btnPendingOrdersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPendingOrdersActionPerformed
        populateOrders("PENDING ORDERS");
    }//GEN-LAST:event_btnPendingOrdersActionPerformed

    private void btnAllOrdersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllOrdersActionPerformed
        populateOrders(null);
    }//GEN-LAST:event_btnAllOrdersActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedRowIndex = tblOrders.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select an Order");
            return;
        } else {
            DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();
            Order selectedOrder = (Order) model.getValueAt(selectedRowIndex, 0);
            Order updatedOrder = orderDirectory.findOrder(selectedOrder.getId());
            updatedOrder.setStatus("DELIVERED");
            orderId = selectedOrder.getId();

            for (int i = 0; i <= orderDirectory.getOrders().size() - 1; i++) {
                if (orderDirectory.getOrders().get(i).getId() == selectedOrder.getId()) {
                    orderDirectory.getOrders().set(i, updatedOrder);
                }
            }
            populateOrders(null);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        switchPanels(MainWorkAreaPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstNameActionPerformed

    private void txtLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastNameActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtMobileNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMobileNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMobileNumActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (validations()) {
            staff.setFirstName(txtFirstName.getText());
            staff.setLastName(txtLastName.getText());
            staff.setEmail(txtEmail.getText());
            staff.setPhoneNumber(txtMobileNum.getText());

            for (int i = 0; i <= deliveryStaffDirectory.getDeliveryStaffMembers().size() - 1; i++) {
                if (deliveryStaffDirectory.getDeliveryStaffMembers().get(i).getUserName().equals(userName)) {
                    deliveryStaffDirectory.getDeliveryStaffMembers().set(i, staff);
                }
            }

            JOptionPane.showMessageDialog(null, "Profile details saved successfully.");
            switchPanels(MainWorkAreaPanel);
            lblGreeting.setText("Welcome " + staff.getFirstName().toUpperCase() + " " + staff.getLastName().toUpperCase() + "!");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnEditProfileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditProfileMouseEntered
        btnEditProfile.setBackground(new Color(112, 143, 143));
    }//GEN-LAST:event_btnEditProfileMouseEntered

    private void btnEditProfileMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditProfileMouseExited
        btnEditProfile.setBackground(new Color(206, 217, 217));
    }//GEN-LAST:event_btnEditProfileMouseExited

    private void btnCompletedOrdersMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCompletedOrdersMouseEntered
        btnCompletedOrders.setBackground(new Color(112, 143, 143));
    }//GEN-LAST:event_btnCompletedOrdersMouseEntered

    private void btnCompletedOrdersMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCompletedOrdersMouseExited
        btnCompletedOrders.setBackground(new Color(206, 217, 217));
    }//GEN-LAST:event_btnCompletedOrdersMouseExited

    private void btnPendingOrdersMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPendingOrdersMouseEntered
        btnPendingOrders.setBackground(new Color(112, 143, 143));
    }//GEN-LAST:event_btnPendingOrdersMouseEntered

    private void btnPendingOrdersMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPendingOrdersMouseExited
        btnPendingOrders.setBackground(new Color(206, 217, 217));
    }//GEN-LAST:event_btnPendingOrdersMouseExited

    private void btnAllOrdersMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAllOrdersMouseEntered
        btnCompletedOrders.setBackground(new Color(112, 143, 143));
    }//GEN-LAST:event_btnAllOrdersMouseEntered

    private void btnAllOrdersMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAllOrdersMouseExited
        btnCompletedOrders.setBackground(new Color(206, 217, 217));
    }//GEN-LAST:event_btnAllOrdersMouseExited

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        jButton1.setBackground(new Color(255, 102, 51));
        jButton1.setForeground(new Color(255, 204, 102));
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        jButton1.setBackground(new Color(255, 204, 102));
        jButton1.setForeground(new Color(255, 102, 51));
    }//GEN-LAST:event_jButton1MouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel EditProfilePanel;
    private javax.swing.JPanel MainWorkAreaPanel;
    private javax.swing.JPanel NavigationPanel;
    private javax.swing.JButton btnAllOrders;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCompletedOrders;
    private javax.swing.JButton btnEditProfile;
    private javax.swing.JButton btnPendingOrders;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblGreeting;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblMobileNum;
    private javax.swing.JTable tblOrders;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMobileNum;
    // End of variables declaration//GEN-END:variables

    private void populateOrders(String flag) {
        DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();
        model.setRowCount(0);

        for (Order order : orderDirectory.getOrders()) {
            if (order.getDeliveryStaffName() != null && !order.getDeliveryStaffName().isBlank() && !order.getDeliveryStaffName().isEmpty()) {
                if (order.getDeliveryStaffName().equals(account.getEmployee().getName())) {
                    if (flag != null && flag.equals("COMPLETED ORDERS")) {
                        if (order.getStatus().equals("DELIVERED")) {
                            Object[] row = new Object[6];
                            row[0] = order;
                            row[1] = order.getCustomerName().toUpperCase();
                            row[2] = order.getRestaurantName().toUpperCase();
                            row[3] = order.getOrderDateTime();
                            row[4] = order.getStatus();
                            row[5] = order.getCustomerAddress();
                            model.addRow(row);
                        }
                    }

                    if (flag != null && flag.equals("PENDING ORDERS")) {
                        if (order.getStatus().equals("ASSIGNED")) {
                            Object[] row = new Object[6];
                            row[0] = order;
                            row[1] = order.getCustomerName().toUpperCase();
                            row[2] = order.getRestaurantName().toUpperCase();
                            row[3] = order.getOrderDateTime();
                            row[4] = order.getStatus();
                            row[5] = order.getCustomerAddress();
                            model.addRow(row);
                        }
                    }

                    if (flag == null) {
                        Object[] row = new Object[6];
                        row[0] = order;
                        row[1] = order.getCustomerName().toUpperCase();
                        row[2] = order.getRestaurantName().toUpperCase();
                        row[3] = order.getOrderDateTime();
                        row[4] = order.getStatus();
                        row[5] = order.getCustomerAddress();
                        model.addRow(row);
                    }
                }
            }
        }
    }

    private void switchPanels(Component component) {
        jLayeredPane1.removeAll();
        jLayeredPane1.add(component);
        jLayeredPane1.revalidate();
        jLayeredPane1.repaint();
    }

    private boolean validations() {

        boolean validData = true;

        // validate the name field
        if (txtFirstName.getText().isBlank() || txtFirstName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "First Name is blank, enter some data!");
            validData = false;
            return validData;
        } // validate the address line 1 field
        else if (txtLastName.getText().isBlank() || txtLastName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Last is blank, enter some data!");
            validData = false;
            return validData;
        } // validate the address line 2 field
        else if (!emailValidate(txtEmail.getText())) {
            JOptionPane.showMessageDialog(this, "Enter a valid EmailID!");
            validData = false;
            return validData;
        } // validate the date of birth
        else if (!teleNumValidate(txtMobileNum.getText())) {
            JOptionPane.showMessageDialog(this, "Enter a valid Phone Number!");
            validData = false;
            return validData;
        } // validate Primary Telephone Number
        else {
            return true;
        }
    }

    private boolean emailValidate(String email) {
        if (email.isBlank() || email.isEmpty()) {
            return false;
        } else if (!email.isBlank() && !email.isEmpty() && !email.contains("@")) {
            return false;
        } else if (!email.isBlank() && !email.isEmpty() && !email.contains(".com")) {
            return false;
        }
        return true;
    }

    private boolean teleNumValidate(String teleNumString) {
        if (teleNumString.isBlank() || teleNumString.isEmpty()) {
            return false;
        } else if (!teleNumString.isBlank() && !teleNumString.isEmpty() && teleNumString.trim().length() != 10) {
            return false;
        }
        return true;
    }
}
