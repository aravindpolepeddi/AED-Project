/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.CustomerRole;

import business.Business;
import business.Customer.CustomerDirectory;
import business.DeliveryStaff.DeliveryStaffDirectory;
import business.FlagClass;
import business.Order.Order;
import business.Order.OrderDirectory;
import business.Restaurant.Restaurant;
import business.Restaurant.RestaurantDirectory;
import business.role.RestaurantRole;
import business.role.Role;
import business.useraccount.UserAccount;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;
import java.util.Random;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.*;

/**
 *
 * @author deepv
 */
public class CustomerAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerAreaJPanel
     */
    RestaurantDirectory restaurantDirectory;
    CustomerDirectory customerDirectory;
    business.Customer.Customer customer;
    Business business;
    String userName;
    OrderDirectory orderDirectory;
    String restaurantName;
    int totalCost;
    ArrayList<String> foodItems;
    int orderId;
    DeliveryStaffDirectory deliveryStaffDirectory;
    FlagClass flags;

    public CustomerAreaJPanel(JPanel userProcessContainer, UserAccount account, Business business) {
        initComponents();
        this.business = business;
        this.restaurantDirectory = restaurantDirectory;
        this.customerDirectory = customerDirectory;
        this.orderDirectory = orderDirectory;
        this.deliveryStaffDirectory = deliveryStaffDirectory;
        this.totalCost = 0;
        this.foodItems = new ArrayList<>();
        this.flags = new FlagClass();
        userName = account.getUsername();
        customer = customerDirectory.findCustomer(userName);
        lblGreeting.setText(customer.getFirstName() == null && customer.getLastName() == null ? "Ready to order " + customer.getUserName() + "?" : "Ready to Order " + customer.getFirstName().toUpperCase() + " " + customer.getLastName().toUpperCase() + "?");

        JTableHeader tableHeader = tblRestaurants.getTableHeader();
        tableHeader.setFont(new Font("Segoe UI", Font.BOLD, 12));
        ((DefaultTableCellRenderer) tableHeader.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        JTableHeader tableHeader1 = tblOrders.getTableHeader();
        tableHeader1.setFont(new Font("Segoe UI", Font.BOLD, 12));
        ((DefaultTableCellRenderer) tableHeader1.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        populateRestaurants();
        disableRadioButtons();
        pnlOrderTable.setVisible(false);
        btnAddReview.setVisible(false);
        btnCancelOrder.setVisible(false);
        btnRateOrder.setVisible(false);

        if (orderDirectory != null) {
            populateOrders();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        navigationPanel = new javax.swing.JPanel();
        btnEditProfile = new javax.swing.JButton();
        tglOrders = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        MainWorkArea = new javax.swing.JPanel();
        lblGreeting = new javax.swing.JLabel();
        pnlTable = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRestaurants = new javax.swing.JTable();
        btnViewMenu = new javax.swing.JButton();
        pnlOrderTable = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();
        btnAddReview = new javax.swing.JButton();
        btnCancelOrder = new javax.swing.JButton();
        btnRateOrder = new javax.swing.JButton();
        EditProfilePanel = new javax.swing.JPanel();
        lblHeader = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblFirstName = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        lblLastName = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblMobileNum = new javax.swing.JLabel();
        txtMobileNum = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        lblAddress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        OrderPanel = new javax.swing.JPanel();
        lblHeader1 = new javax.swing.JLabel();
        btnBack1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        lblApetizers1 = new javax.swing.JLabel();
        lblAptVeg1 = new javax.swing.JLabel();
        lblAptNonVeg1 = new javax.swing.JLabel();
        lblAptVegan1 = new javax.swing.JLabel();
        rdOnionRings1 = new javax.swing.JRadioButton();
        rdSpinachPie1 = new javax.swing.JRadioButton();
        rdSpringRoles1 = new javax.swing.JRadioButton();
        rdMeatBalls1 = new javax.swing.JRadioButton();
        rdSausageDip1 = new javax.swing.JRadioButton();
        rdFriedShrimp1 = new javax.swing.JRadioButton();
        rdWhiteBeanDip1 = new javax.swing.JRadioButton();
        rdTortillaChips1 = new javax.swing.JRadioButton();
        rdCrispyTofu1 = new javax.swing.JRadioButton();
        lblMains1 = new javax.swing.JLabel();
        lblMainsVeg1 = new javax.swing.JLabel();
        rdCheeseBurger1 = new javax.swing.JRadioButton();
        rdFriedRice1 = new javax.swing.JRadioButton();
        rdVeggiePizza1 = new javax.swing.JRadioButton();
        rdHamBurger1 = new javax.swing.JRadioButton();
        rdFishNChips1 = new javax.swing.JRadioButton();
        rdPrawnFriedRice1 = new javax.swing.JRadioButton();
        rdTofuSalad1 = new javax.swing.JRadioButton();
        rdFalafelBowl1 = new javax.swing.JRadioButton();
        rdTofuAndRiceBowl1 = new javax.swing.JRadioButton();
        lblMainsNonVeg1 = new javax.swing.JLabel();
        lblAptVegan2 = new javax.swing.JLabel();
        lblDesserts1 = new javax.swing.JLabel();
        rdBlackForestCake1 = new javax.swing.JRadioButton();
        rdPineappleSwissRole1 = new javax.swing.JRadioButton();
        rdChocolateMousse1 = new javax.swing.JRadioButton();
        lbBeverages1 = new javax.swing.JLabel();
        rdCocaCola1 = new javax.swing.JRadioButton();
        rdFreshLimesalted1 = new javax.swing.JRadioButton();
        rdPepsi1 = new javax.swing.JRadioButton();
        lblOnionRingsPrice = new javax.swing.JLabel();
        lblSpinachPiePrice = new javax.swing.JLabel();
        lblSpringRolesPrice = new javax.swing.JLabel();
        lblMeatBallsPrice = new javax.swing.JLabel();
        lblsausageDipPrice = new javax.swing.JLabel();
        lblFriedShrimpPrice = new javax.swing.JLabel();
        lblWhiteBeanDipPrice = new javax.swing.JLabel();
        lblTortillaChipsPrice = new javax.swing.JLabel();
        lblCrispyTofuPrice = new javax.swing.JLabel();
        lblCheeseBurgerPrice = new javax.swing.JLabel();
        lblFriedRicePrice = new javax.swing.JLabel();
        lblVeggiePrice = new javax.swing.JLabel();
        lblHamburgerPrice = new javax.swing.JLabel();
        lblFishNChipsPrice = new javax.swing.JLabel();
        lblPrawnFriedRicePrice = new javax.swing.JLabel();
        lblTofuSaladPrice = new javax.swing.JLabel();
        lblFalafelBowlPrice = new javax.swing.JLabel();
        lblTofuRiceBowlPrice = new javax.swing.JLabel();
        lblBlackForestCakePrice = new javax.swing.JLabel();
        lblPineappleSwissRolePrice = new javax.swing.JLabel();
        lblChocolateMoussePrice = new javax.swing.JLabel();
        lblCocaColaPrice = new javax.swing.JLabel();
        lblFreshLimeSaltedPrice = new javax.swing.JLabel();
        lblPepsiPrice = new javax.swing.JLabel();
        btnOrder = new javax.swing.JButton();
        FeedbackPanel = new javax.swing.JPanel();
        lblHeading = new javax.swing.JLabel();
        lblOrderId = new javax.swing.JLabel();
        txtOrderId = new javax.swing.JTextField();
        lblFeedback = new javax.swing.JLabel();
        txtFeedback = new javax.swing.JTextField();
        btnSubmitFeedback = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        RateOrderPanel = new javax.swing.JPanel();
        lblHeading1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        rd5 = new javax.swing.JRadioButton();
        rd4 = new javax.swing.JRadioButton();
        rd3 = new javax.swing.JRadioButton();
        rd2 = new javax.swing.JRadioButton();
        rd1 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();

        navigationPanel.setBackground(new java.awt.Color(0, 51, 51));

        btnEditProfile.setBackground(new java.awt.Color(206, 217, 217));
        btnEditProfile.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEditProfile.setForeground(new java.awt.Color(0, 51, 51));
        btnEditProfile.setText("EDIT PROFILE");
        btnEditProfile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditProfile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEditProfileMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEditProfileMouseExited(evt);
            }
        });
        btnEditProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditProfileActionPerformed(evt);
            }
        });

        tglOrders.setBackground(new java.awt.Color(206, 217, 217));
        tglOrders.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tglOrders.setForeground(new java.awt.Color(0, 51, 51));
        tglOrders.setText("TOGGLE ORDERS");
        tglOrders.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tglOrders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tglOrdersMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tglOrdersMouseExited(evt);
            }
        });
        tglOrders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglOrdersActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(178, 209, 201));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel1.setText("<html><span font color=\"rgb(178, 209, 201)\">C</span> <span font color=\"rgb(0,153,153)\">!<span></html> ");

        javax.swing.GroupLayout navigationPanelLayout = new javax.swing.GroupLayout(navigationPanel);
        navigationPanel.setLayout(navigationPanelLayout);
        navigationPanelLayout.setHorizontalGroup(
            navigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigationPanelLayout.createSequentialGroup()
                .addGroup(navigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(navigationPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(navigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tglOrders, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                            .addComponent(btnEditProfile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(navigationPanelLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        navigationPanelLayout.setVerticalGroup(
            navigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigationPanelLayout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(btnEditProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(187, 187, 187)
                .addComponent(tglOrders, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
        );

        navigationPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnEditProfile, tglOrders});

        jSplitPane1.setLeftComponent(navigationPanel);

        jLayeredPane1.setLayout(new java.awt.CardLayout());

        MainWorkArea.setBackground(new java.awt.Color(240, 255, 255));

        lblGreeting.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblGreeting.setForeground(new java.awt.Color(0, 153, 153));
        lblGreeting.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblGreeting.setText("<customer greeting>");

        pnlTable.setBackground(new java.awt.Color(240, 255, 255));

        tblRestaurants.setBackground(new java.awt.Color(255, 255, 255));
        tblRestaurants.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblRestaurants.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "NAME", "ADDRESS", "CUISINE", "TYPE", "PHONE NO.", "EMAIL ID"
            }
        ));
        tblRestaurants.setSelectionBackground(new java.awt.Color(153, 209, 232));
        tblRestaurants.setSelectionForeground(new java.awt.Color(0, 51, 51));
        jScrollPane1.setViewportView(tblRestaurants);
        if (tblRestaurants.getColumnModel().getColumnCount() > 0) {
            tblRestaurants.getColumnModel().getColumn(5).setHeaderValue("EMAIL ID");
        }

        javax.swing.GroupLayout pnlTableLayout = new javax.swing.GroupLayout(pnlTable);
        pnlTable.setLayout(pnlTableLayout);
        pnlTableLayout.setHorizontalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );
        pnlTableLayout.setVerticalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnViewMenu.setBackground(new java.awt.Color(0, 0, 0));
        btnViewMenu.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnViewMenu.setForeground(new java.awt.Color(255, 255, 255));
        btnViewMenu.setText("VIEW MENU");
        btnViewMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewMenuActionPerformed(evt);
            }
        });

        pnlOrderTable.setBackground(new java.awt.Color(240, 255, 255));

        tblOrders.setBackground(new java.awt.Color(255, 255, 255));
        tblOrders.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "RESTAURANT", "TOTAL COST", "ORDER TIME", "ORDER STATUS", "DELIVERED BY", "ADDRESS"
            }
        ));
        tblOrders.setSelectionBackground(new java.awt.Color(153, 209, 232));
        tblOrders.setSelectionForeground(new java.awt.Color(0, 51, 51));
        jScrollPane3.setViewportView(tblOrders);
        if (tblOrders.getColumnModel().getColumnCount() > 0) {
            tblOrders.getColumnModel().getColumn(0).setPreferredWidth(10);
            tblOrders.getColumnModel().getColumn(5).setPreferredWidth(30);
        }

        javax.swing.GroupLayout pnlOrderTableLayout = new javax.swing.GroupLayout(pnlOrderTable);
        pnlOrderTable.setLayout(pnlOrderTableLayout);
        pnlOrderTableLayout.setHorizontalGroup(
            pnlOrderTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOrderTableLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );
        pnlOrderTableLayout.setVerticalGroup(
            pnlOrderTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOrderTableLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnAddReview.setBackground(new java.awt.Color(255, 255, 255));
        btnAddReview.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAddReview.setForeground(new java.awt.Color(0, 153, 51));
        btnAddReview.setText("Add a Feedback");
        btnAddReview.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddReview.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAddReviewMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAddReviewMouseExited(evt);
            }
        });
        btnAddReview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddReviewActionPerformed(evt);
            }
        });

        btnCancelOrder.setBackground(new java.awt.Color(153, 0, 0));
        btnCancelOrder.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCancelOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelOrder.setText("CANCEL ORDER");
        btnCancelOrder.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelOrderActionPerformed(evt);
            }
        });

        btnRateOrder.setBackground(new java.awt.Color(0, 0, 0));
        btnRateOrder.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRateOrder.setForeground(new java.awt.Color(0, 153, 153));
        btnRateOrder.setText("Rate an Order");
        btnRateOrder.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRateOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRateOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MainWorkAreaLayout = new javax.swing.GroupLayout(MainWorkArea);
        MainWorkArea.setLayout(MainWorkAreaLayout);
        MainWorkAreaLayout.setHorizontalGroup(
            MainWorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblGreeting, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(MainWorkAreaLayout.createSequentialGroup()
                .addGroup(MainWorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainWorkAreaLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(btnViewMenu))
                    .addGroup(MainWorkAreaLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(MainWorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlOrderTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(MainWorkAreaLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(btnAddReview)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelOrder)
                        .addGap(18, 18, 18)
                        .addComponent(btnRateOrder)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MainWorkAreaLayout.setVerticalGroup(
            MainWorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainWorkAreaLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lblGreeting)
                .addGap(89, 89, 89)
                .addComponent(btnViewMenu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(MainWorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddReview)
                    .addComponent(btnCancelOrder)
                    .addComponent(btnRateOrder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlOrderTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(98, Short.MAX_VALUE))
        );

        jLayeredPane1.add(MainWorkArea, "card2");

        EditProfilePanel.setBackground(new java.awt.Color(240, 255, 255));

        lblHeader.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblHeader.setForeground(new java.awt.Color(0, 153, 153));
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("Edit Profile");

        btnBack.setBackground(new java.awt.Color(255, 204, 204));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 0, 51));
        btnBack.setText("BACK");
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblFirstName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblFirstName.setForeground(new java.awt.Color(0, 51, 51));
        lblFirstName.setText("FIRST NAME : ");

        txtFirstName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtFirstName.setForeground(new java.awt.Color(0, 102, 102));
        txtFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstNameActionPerformed(evt);
            }
        });

        lblLastName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLastName.setForeground(new java.awt.Color(0, 51, 51));
        lblLastName.setText("LAST NAME : ");

        txtLastName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtLastName.setForeground(new java.awt.Color(0, 102, 102));
        txtLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastNameActionPerformed(evt);
            }
        });

        lblEmail.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(0, 51, 51));
        lblEmail.setText("EMAIL : ");

        txtEmail.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtEmail.setForeground(new java.awt.Color(0, 102, 102));
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        lblMobileNum.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblMobileNum.setForeground(new java.awt.Color(0, 51, 51));
        lblMobileNum.setText("MOBILE NUMBER : ");

        txtMobileNum.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtMobileNum.setForeground(new java.awt.Color(0, 102, 102));
        txtMobileNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMobileNumActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(215, 254, 211));
        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSave.setForeground(new java.awt.Color(72, 151, 64));
        btnSave.setText("SAVE CHANGES");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblAddress.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAddress.setForeground(new java.awt.Color(0, 51, 51));
        lblAddress.setText("ADDRESS : ");

        txtAddress.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtAddress.setForeground(new java.awt.Color(0, 102, 102));
        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EditProfilePanelLayout = new javax.swing.GroupLayout(EditProfilePanel);
        EditProfilePanel.setLayout(EditProfilePanelLayout);
        EditProfilePanelLayout.setHorizontalGroup(
            EditProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditProfilePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(35, 35, 35))
            .addGroup(EditProfilePanelLayout.createSequentialGroup()
                .addGroup(EditProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditProfilePanelLayout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addGroup(EditProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(EditProfilePanelLayout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(lblHeader))
                            .addGroup(EditProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditProfilePanelLayout.createSequentialGroup()
                                    .addComponent(lblMobileNum)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtMobileNum, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditProfilePanelLayout.createSequentialGroup()
                                    .addComponent(lblEmail)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditProfilePanelLayout.createSequentialGroup()
                                    .addGroup(EditProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblFirstName)
                                        .addComponent(lblLastName))
                                    .addGap(18, 18, 18)
                                    .addGroup(EditProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                        .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditProfilePanelLayout.createSequentialGroup()
                                    .addComponent(lblAddress)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(EditProfilePanelLayout.createSequentialGroup()
                        .addGap(250, 250, 250)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(232, Short.MAX_VALUE))
        );
        EditProfilePanelLayout.setVerticalGroup(
            EditProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditProfilePanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHeader)
                .addGap(80, 80, 80)
                .addGroup(EditProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstName)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(EditProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLastName)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(EditProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(EditProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMobileNum)
                    .addComponent(txtMobileNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(EditProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddress)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(btnSave)
                .addContainerGap(147, Short.MAX_VALUE))
        );

        jLayeredPane1.add(EditProfilePanel, "card3");

        OrderPanel.setBackground(new java.awt.Color(240, 255, 255));

        lblHeader1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblHeader1.setForeground(new java.awt.Color(0, 153, 153));
        lblHeader1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader1.setText("<Place your order at xyz>");

        btnBack1.setBackground(new java.awt.Color(255, 204, 204));
        btnBack1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack1.setForeground(new java.awt.Color(255, 0, 51));
        btnBack1.setText("BACK");
        btnBack1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(240, 255, 255));

        lblApetizers1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblApetizers1.setForeground(new java.awt.Color(0, 204, 204));
        lblApetizers1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblApetizers1.setText("APPETIZERS");

        lblAptVeg1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAptVeg1.setForeground(new java.awt.Color(0, 102, 102));
        lblAptVeg1.setText("VEG");

        lblAptNonVeg1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAptNonVeg1.setForeground(new java.awt.Color(0, 102, 102));
        lblAptNonVeg1.setText("NON-VEG");

        lblAptVegan1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAptVegan1.setForeground(new java.awt.Color(0, 102, 102));
        lblAptVegan1.setText("VEGAN");

        rdOnionRings1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdOnionRings1.setForeground(new java.awt.Color(0, 0, 0));
        rdOnionRings1.setText("Onion Rings");
        rdOnionRings1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdOnionRings1ActionPerformed(evt);
            }
        });

        rdSpinachPie1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdSpinachPie1.setForeground(new java.awt.Color(0, 0, 0));
        rdSpinachPie1.setText("Spinach Pie");

        rdSpringRoles1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdSpringRoles1.setForeground(new java.awt.Color(0, 0, 0));
        rdSpringRoles1.setText("Spring Roles");

        rdMeatBalls1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdMeatBalls1.setForeground(new java.awt.Color(0, 0, 0));
        rdMeatBalls1.setText("Meatballs");

        rdSausageDip1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdSausageDip1.setForeground(new java.awt.Color(0, 0, 0));
        rdSausageDip1.setText("Sausage Dip");

        rdFriedShrimp1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdFriedShrimp1.setForeground(new java.awt.Color(0, 0, 0));
        rdFriedShrimp1.setText("Fired Shrimp");

        rdWhiteBeanDip1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdWhiteBeanDip1.setForeground(new java.awt.Color(0, 0, 0));
        rdWhiteBeanDip1.setText("White Bean Dip");

        rdTortillaChips1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdTortillaChips1.setForeground(new java.awt.Color(0, 0, 0));
        rdTortillaChips1.setText("Tortilla Chips");

        rdCrispyTofu1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdCrispyTofu1.setForeground(new java.awt.Color(0, 0, 0));
        rdCrispyTofu1.setText("Crispy Tofu");

        lblMains1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMains1.setForeground(new java.awt.Color(0, 204, 204));
        lblMains1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMains1.setText("MAINS");

        lblMainsVeg1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblMainsVeg1.setForeground(new java.awt.Color(0, 102, 102));
        lblMainsVeg1.setText("VEG");

        rdCheeseBurger1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdCheeseBurger1.setForeground(new java.awt.Color(0, 0, 0));
        rdCheeseBurger1.setText("Cheese Burger");
        rdCheeseBurger1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdCheeseBurger1ActionPerformed(evt);
            }
        });

        rdFriedRice1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdFriedRice1.setForeground(new java.awt.Color(0, 0, 0));
        rdFriedRice1.setText("Fried Rice");

        rdVeggiePizza1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdVeggiePizza1.setForeground(new java.awt.Color(0, 0, 0));
        rdVeggiePizza1.setText("Veggie Pizza");

        rdHamBurger1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdHamBurger1.setForeground(new java.awt.Color(0, 0, 0));
        rdHamBurger1.setText("Ham Burger");

        rdFishNChips1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdFishNChips1.setForeground(new java.awt.Color(0, 0, 0));
        rdFishNChips1.setText("Fish N' Chips");

        rdPrawnFriedRice1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdPrawnFriedRice1.setForeground(new java.awt.Color(0, 0, 0));
        rdPrawnFriedRice1.setText("Prawn Fried Rice");

        rdTofuSalad1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdTofuSalad1.setForeground(new java.awt.Color(0, 0, 0));
        rdTofuSalad1.setText("Tofu Salad");

        rdFalafelBowl1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdFalafelBowl1.setForeground(new java.awt.Color(0, 0, 0));
        rdFalafelBowl1.setText("Falafel Bowl");

        rdTofuAndRiceBowl1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdTofuAndRiceBowl1.setForeground(new java.awt.Color(0, 0, 0));
        rdTofuAndRiceBowl1.setText("Tofu & Rice platter");

        lblMainsNonVeg1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblMainsNonVeg1.setForeground(new java.awt.Color(0, 102, 102));
        lblMainsNonVeg1.setText("NON-VEG");

        lblAptVegan2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAptVegan2.setForeground(new java.awt.Color(0, 102, 102));
        lblAptVegan2.setText("VEGAN");

        lblDesserts1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDesserts1.setForeground(new java.awt.Color(0, 204, 204));
        lblDesserts1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDesserts1.setText("DESSERTS");

        rdBlackForestCake1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdBlackForestCake1.setForeground(new java.awt.Color(0, 0, 0));
        rdBlackForestCake1.setText("Black Forest Cake");

        rdPineappleSwissRole1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdPineappleSwissRole1.setForeground(new java.awt.Color(0, 0, 0));
        rdPineappleSwissRole1.setText("Pineapple Swiss Role");

        rdChocolateMousse1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdChocolateMousse1.setForeground(new java.awt.Color(0, 0, 0));
        rdChocolateMousse1.setText("Chocolate Mousse with Whipped Cream");

        lbBeverages1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbBeverages1.setForeground(new java.awt.Color(0, 204, 204));
        lbBeverages1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbBeverages1.setText("BEVERAGES");

        rdCocaCola1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdCocaCola1.setForeground(new java.awt.Color(0, 0, 0));
        rdCocaCola1.setText("CocaCola");

        rdFreshLimesalted1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdFreshLimesalted1.setForeground(new java.awt.Color(0, 0, 0));
        rdFreshLimesalted1.setText("Fresh Lime Salted");

        rdPepsi1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdPepsi1.setForeground(new java.awt.Color(0, 0, 0));
        rdPepsi1.setText("Pepsi");

        lblOnionRingsPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblOnionRingsPrice.setForeground(new java.awt.Color(0, 102, 102));
        lblOnionRingsPrice.setText("- NA -");

        lblSpinachPiePrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSpinachPiePrice.setForeground(new java.awt.Color(0, 102, 102));
        lblSpinachPiePrice.setText("- NA -");

        lblSpringRolesPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSpringRolesPrice.setForeground(new java.awt.Color(0, 102, 102));
        lblSpringRolesPrice.setText("- NA -");

        lblMeatBallsPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblMeatBallsPrice.setForeground(new java.awt.Color(0, 102, 102));
        lblMeatBallsPrice.setText("- NA -");

        lblsausageDipPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblsausageDipPrice.setForeground(new java.awt.Color(0, 102, 102));
        lblsausageDipPrice.setText("- NA -");

        lblFriedShrimpPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblFriedShrimpPrice.setForeground(new java.awt.Color(0, 102, 102));
        lblFriedShrimpPrice.setText("- NA -");

        lblWhiteBeanDipPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblWhiteBeanDipPrice.setForeground(new java.awt.Color(0, 102, 102));
        lblWhiteBeanDipPrice.setText("- NA -");

        lblTortillaChipsPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTortillaChipsPrice.setForeground(new java.awt.Color(0, 102, 102));
        lblTortillaChipsPrice.setText("- NA -");

        lblCrispyTofuPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblCrispyTofuPrice.setForeground(new java.awt.Color(0, 102, 102));
        lblCrispyTofuPrice.setText("- NA -");

        lblCheeseBurgerPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblCheeseBurgerPrice.setForeground(new java.awt.Color(0, 102, 102));
        lblCheeseBurgerPrice.setText("- NA -");

        lblFriedRicePrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblFriedRicePrice.setForeground(new java.awt.Color(0, 102, 102));
        lblFriedRicePrice.setText("- NA -");

        lblVeggiePrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblVeggiePrice.setForeground(new java.awt.Color(0, 102, 102));
        lblVeggiePrice.setText("- NA -");

        lblHamburgerPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblHamburgerPrice.setForeground(new java.awt.Color(0, 102, 102));
        lblHamburgerPrice.setText("- NA -");

        lblFishNChipsPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblFishNChipsPrice.setForeground(new java.awt.Color(0, 102, 102));
        lblFishNChipsPrice.setText("- NA -");

        lblPrawnFriedRicePrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPrawnFriedRicePrice.setForeground(new java.awt.Color(0, 102, 102));
        lblPrawnFriedRicePrice.setText("- NA -");

        lblTofuSaladPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTofuSaladPrice.setForeground(new java.awt.Color(0, 102, 102));
        lblTofuSaladPrice.setText("- NA -");

        lblFalafelBowlPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblFalafelBowlPrice.setForeground(new java.awt.Color(0, 102, 102));
        lblFalafelBowlPrice.setText("- NA -");

        lblTofuRiceBowlPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTofuRiceBowlPrice.setForeground(new java.awt.Color(0, 102, 102));
        lblTofuRiceBowlPrice.setText("- NA -");

        lblBlackForestCakePrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblBlackForestCakePrice.setForeground(new java.awt.Color(0, 102, 102));
        lblBlackForestCakePrice.setText("- NA -");

        lblPineappleSwissRolePrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPineappleSwissRolePrice.setForeground(new java.awt.Color(0, 102, 102));
        lblPineappleSwissRolePrice.setText("- NA -");

        lblChocolateMoussePrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblChocolateMoussePrice.setForeground(new java.awt.Color(0, 102, 102));
        lblChocolateMoussePrice.setText("- NA -");

        lblCocaColaPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblCocaColaPrice.setForeground(new java.awt.Color(0, 102, 102));
        lblCocaColaPrice.setText("- NA -");

        lblFreshLimeSaltedPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblFreshLimeSaltedPrice.setForeground(new java.awt.Color(0, 102, 102));
        lblFreshLimeSaltedPrice.setText("- NA -");

        lblPepsiPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPepsiPrice.setForeground(new java.awt.Color(0, 102, 102));
        lblPepsiPrice.setText("- NA -");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(rdOnionRings1)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(lblOnionRingsPrice))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(rdSpinachPie1)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(lblSpinachPiePrice))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(rdSpringRoles1)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(lblSpringRolesPrice)))
                                            .addGap(81, 81, 81)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(rdMeatBalls1)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(lblMeatBallsPrice))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(rdSausageDip1)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(lblsausageDipPrice))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(rdFriedShrimp1)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(lblFriedShrimpPrice)))
                                            .addGap(63, 63, 63))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(lblMainsNonVeg1)
                                            .addGap(131, 131, 131)))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(rdWhiteBeanDip1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblWhiteBeanDipPrice))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(rdCrispyTofu1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblCrispyTofuPrice))
                                        .addComponent(lblAptVegan2)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(rdTortillaChips1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblTortillaChipsPrice))))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(43, 43, 43)
                                            .addComponent(lblMainsVeg1)
                                            .addGap(151, 151, 151)
                                            .addComponent(lblMains1))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(rdCheeseBurger1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblCheeseBurgerPrice))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(rdFriedRice1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblFriedRicePrice))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(rdVeggiePizza1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblVeggiePrice)))
                                    .addGap(111, 111, 111)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(1, 1, 1)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(rdTofuSalad1)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(lblTofuSaladPrice))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(rdFalafelBowl1)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(lblFalafelBowlPrice))))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(rdTofuAndRiceBowl1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblTofuRiceBowlPrice))))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(rdBlackForestCake1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblBlackForestCakePrice))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(rdPineappleSwissRole1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblPineappleSwissRolePrice))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(rdChocolateMousse1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblChocolateMoussePrice)))
                                    .addGap(59, 59, 59)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(lbBeverages1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(17, 17, 17))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(rdPepsi1)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(lblPepsiPrice))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(rdCocaCola1)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(lblCocaColaPrice))
                                                .addComponent(rdFreshLimesalted1))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblFreshLimeSaltedPrice)
                                            .addGap(3, 3, 3)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(213, 213, 213)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(rdPrawnFriedRice1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblPrawnFriedRicePrice))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(rdHamBurger1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblHamburgerPrice))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(rdFishNChips1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblFishNChipsPrice))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblApetizers1)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblAptVeg1)
                                        .addGap(188, 188, 188)
                                        .addComponent(lblAptNonVeg1)))
                                .addGap(140, 140, 140)
                                .addComponent(lblAptVegan1))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(lblDesserts1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(lblApetizers1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAptVeg1)
                    .addComponent(lblAptNonVeg1)
                    .addComponent(lblAptVegan1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdOnionRings1)
                            .addComponent(lblOnionRingsPrice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdSpinachPie1)
                            .addComponent(lblSpinachPiePrice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdSpringRoles1)
                            .addComponent(lblSpringRolesPrice)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdMeatBalls1)
                            .addComponent(lblMeatBallsPrice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdSausageDip1)
                            .addComponent(lblsausageDipPrice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdFriedShrimp1)
                            .addComponent(lblFriedShrimpPrice)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdWhiteBeanDip1)
                            .addComponent(lblWhiteBeanDipPrice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdTortillaChips1)
                            .addComponent(lblTortillaChipsPrice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdCrispyTofu1)
                            .addComponent(lblCrispyTofuPrice))))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblMains1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMainsVeg1)
                            .addComponent(lblMainsNonVeg1)
                            .addComponent(lblAptVegan2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rdCheeseBurger1)
                                    .addComponent(lblCheeseBurgerPrice))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rdFriedRice1)
                                    .addComponent(lblFriedRicePrice))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rdVeggiePizza1)
                                    .addComponent(lblVeggiePrice)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rdHamBurger1)
                                    .addComponent(lblHamburgerPrice))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rdFishNChips1)
                                    .addComponent(lblFishNChipsPrice))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rdPrawnFriedRice1)
                                    .addComponent(lblPrawnFriedRicePrice)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rdTofuSalad1)
                                    .addComponent(lblTofuSaladPrice))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rdFalafelBowl1)
                                    .addComponent(lblFalafelBowlPrice))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rdTofuAndRiceBowl1)
                                    .addComponent(lblTofuRiceBowlPrice))))
                        .addGap(36, 36, 36)
                        .addComponent(lblDesserts1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdBlackForestCake1)
                            .addComponent(lblBlackForestCakePrice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdPineappleSwissRole1)
                            .addComponent(lblPineappleSwissRolePrice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdChocolateMousse1)
                            .addComponent(lblChocolateMoussePrice)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbBeverages1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdCocaCola1)
                            .addComponent(lblCocaColaPrice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdFreshLimesalted1)
                            .addComponent(lblFreshLimeSaltedPrice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdPepsi1)
                            .addComponent(lblPepsiPrice))))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel1);

        btnOrder.setBackground(new java.awt.Color(215, 254, 211));
        btnOrder.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnOrder.setForeground(new java.awt.Color(72, 151, 64));
        btnOrder.setText("ORDER!");
        btnOrder.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout OrderPanelLayout = new javax.swing.GroupLayout(OrderPanel);
        OrderPanel.setLayout(OrderPanelLayout);
        OrderPanelLayout.setHorizontalGroup(
            OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OrderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OrderPanelLayout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(lblHeader1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnBack1)
                    .addComponent(btnOrder))
                .addGap(50, 50, 50))
        );
        OrderPanelLayout.setVerticalGroup(
            OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrderPanelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(btnBack1)
                .addGap(12, 12, 12)
                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHeader1)
                    .addComponent(btnOrder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLayeredPane1.add(OrderPanel, "card4");

        FeedbackPanel.setBackground(new java.awt.Color(240, 255, 255));

        lblHeading.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblHeading.setForeground(new java.awt.Color(0, 153, 153));
        lblHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeading.setText("FEEDBACK");

        lblOrderId.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblOrderId.setForeground(new java.awt.Color(0, 51, 51));
        lblOrderId.setText("ORDER ID : ");

        txtOrderId.setEditable(false);
        txtOrderId.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        lblFeedback.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblFeedback.setForeground(new java.awt.Color(0, 51, 51));
        lblFeedback.setText("FEEDBACK COMMENT : ");

        txtFeedback.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        btnSubmitFeedback.setBackground(new java.awt.Color(215, 254, 211));
        btnSubmitFeedback.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSubmitFeedback.setForeground(new java.awt.Color(72, 151, 64));
        btnSubmitFeedback.setText("SUBMIT FEEDBACK");
        btnSubmitFeedback.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSubmitFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitFeedbackActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 204, 204));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 0, 0));
        jButton2.setText("BACK");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FeedbackPanelLayout = new javax.swing.GroupLayout(FeedbackPanel);
        FeedbackPanel.setLayout(FeedbackPanelLayout);
        FeedbackPanelLayout.setHorizontalGroup(
            FeedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FeedbackPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(35, 35, 35))
            .addGroup(FeedbackPanelLayout.createSequentialGroup()
                .addGroup(FeedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FeedbackPanelLayout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addGroup(FeedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFeedback)
                            .addGroup(FeedbackPanelLayout.createSequentialGroup()
                                .addComponent(lblOrderId)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtOrderId, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(FeedbackPanelLayout.createSequentialGroup()
                        .addGap(300, 300, 300)
                        .addComponent(btnSubmitFeedback)))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        FeedbackPanelLayout.setVerticalGroup(
            FeedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FeedbackPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(FeedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(109, 109, 109)
                .addGroup(FeedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOrderId)
                    .addComponent(txtOrderId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(lblFeedback)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(btnSubmitFeedback)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jLayeredPane1.add(FeedbackPanel, "card5");

        RateOrderPanel.setBackground(new java.awt.Color(240, 255, 255));

        lblHeading1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblHeading1.setForeground(new java.awt.Color(0, 153, 153));
        lblHeading1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeading1.setText("<Rate order xyz>");

        jButton3.setBackground(new java.awt.Color(255, 204, 204));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 0, 0));
        jButton3.setText("BACK");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("<html><span font color=\"rgb(178, 209, 201)\">Highest is <span font color = \"rgb(252, 140, 3)\">5</span> </span> <span font color=\"rgb(0,153,153)\">:)</span><span font color=\"rgb(178, 209, 201)\"> and the lowest is <span font color = \"rgb(252, 140, 3)\">1</span> </span> <span font color=\"rgb(0,153,153)\">:(<span></html>");

        rd5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rd5.setForeground(new java.awt.Color(0, 102, 102));
        rd5.setText("<html> <span font color=\"rgb(252, 140, 3)\">(5) <span>Loved it!</html> ");
        rd5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rd5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rd5ActionPerformed(evt);
            }
        });

        rd4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rd4.setForeground(new java.awt.Color(0, 102, 102));
        rd4.setText("<html> <span font color=\"rgb(252, 140, 3)\">(4) <span>Hmm, it wasn't shabby</html> ");
        rd4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rd4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rd4ActionPerformed(evt);
            }
        });

        rd3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rd3.setForeground(new java.awt.Color(0, 102, 102));
        rd3.setText("<html> <span font color=\"rgb(252, 140, 3)\">(3) <span> Eh! could have been better</html>");
        rd3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rd3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rd3ActionPerformed(evt);
            }
        });

        rd2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rd2.setForeground(new java.awt.Color(0, 102, 102));
        rd2.setText("<html> <span font color=\"rgb(252, 140, 3)\">(2) <span>Pretending that it was good but it really wasn't</html>  ");
        rd2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rd2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rd2ActionPerformed(evt);
            }
        });

        rd1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rd1.setForeground(new java.awt.Color(0, 102, 102));
        rd1.setText("<html><span font color=\"rgb(252, 140, 3)\">(1) <span>'Horrific' is the word!</html> ");
        rd1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rd1ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(215, 254, 211));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(72, 151, 64));
        jButton1.setText("SUBMIT");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RateOrderPanelLayout = new javax.swing.GroupLayout(RateOrderPanel);
        RateOrderPanel.setLayout(RateOrderPanelLayout);
        RateOrderPanelLayout.setHorizontalGroup(
            RateOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RateOrderPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblHeading1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(jButton3)
                .addGap(42, 42, 42))
            .addComponent(jLabel2)
            .addGroup(RateOrderPanelLayout.createSequentialGroup()
                .addGap(275, 275, 275)
                .addGroup(RateOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(rd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rd3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rd4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rd5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        RateOrderPanelLayout.setVerticalGroup(
            RateOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RateOrderPanelLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(RateOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHeading1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(133, 133, 133)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(rd5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rd4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rd3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(jButton1)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        jLayeredPane1.add(RateOrderPanel, "card6");

        jSplitPane1.setRightComponent(jLayeredPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 843, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        switchPanels(MainWorkArea);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstNameActionPerformed

    private void txtLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastNameActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtMobileNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMobileNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMobileNumActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (validations()) {
            customer.setFirstName(txtFirstName.getText());
            customer.setLastName(txtLastName.getText());
            customer.setEmail(txtEmail.getText());
            customer.setPhoneNumber(txtMobileNum.getText());
            customer.setAddress(txtAddress.getText());

            JOptionPane.showMessageDialog(null, "Profile details saved successfully.");
            switchPanels(MainWorkArea);

            Order order = orderDirectory.findOrderByCustomerName(customer.getFirstName() + " " + customer.getLastName());
            order.setCustomerAddress(txtAddress.getText());

            for (int i = 0; i <= orderDirectory.getOrders().size() - 1; i++) {
                if (orderDirectory.getOrders().get(i).getCustomerName().equals(customer.getFirstName() + " " + customer.getLastName())) {
                    orderDirectory.getOrders().set(i, order);
                }
            }

            for (int i = 0; i <= customerDirectory.getCustomers().size() - 1; i++) {
                if (customerDirectory.getCustomers().get(i).getUserName().equals(userName)) {
                    customerDirectory.getCustomers().set(i, customer);
                }
            }

            lblGreeting.setText("Ready to Order " + customer.getFirstName().toUpperCase() + " " + customer.getLastName().toUpperCase() + "?");

            if (orderDirectory != null) {
                populateOrders();
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnEditProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditProfileActionPerformed
        switchPanels(EditProfilePanel);
        txtFirstName.setText(customer.getFirstName());
        txtLastName.setText(customer.getLastName());
        txtEmail.setText(customer.getEmail());
        txtMobileNum.setText(customer.getPhoneNumber());
        txtAddress.setText(customer.getAddress());

//        Order order = orderDirectory.findOrderByCustomerName(customer.getAddress());
//        order.setCustomerAddress(txtAddress.getText());
//
//        for (int i = 0; i <= orderDirectory.getOrders().size() - 1; i++) {
//            if (orderDirectory.getOrders().get(i).getCustomerName().equals(customer.getFirstName() + " " + customer.getLastName())) {
//                orderDirectory.getOrders().set(i, order);
//            }
//        }
//
//        if (orderDirectory != null) {
//            populateOrders();
//        }
    }//GEN-LAST:event_btnEditProfileActionPerformed

    private void btnViewMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewMenuActionPerformed
        int selectedRowIndex = tblRestaurants.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Restaurant");
            return;
        } else {
            switchPanels(OrderPanel);
            DefaultTableModel model = (DefaultTableModel) tblRestaurants.getModel();
            Restaurant selectedRestaurant = (Restaurant) model.getValueAt(selectedRowIndex, 0);
            lblHeader1.setText("Place your order at " + selectedRestaurant.getName() + "!");
            restaurantName = selectedRestaurant.getName();

            if (selectedRestaurant.getMenu() != null) {
                if (selectedRestaurant.getMenu().getApetizers() != null && !selectedRestaurant.getMenu().getApetizers().isEmpty()) {
                    enableAppetizerRadioButtons(selectedRestaurant);
                }

                if (selectedRestaurant.getMenu().getMains() != null && !selectedRestaurant.getMenu().getMains().isEmpty()) {
                    enableMainsRadioButtons(selectedRestaurant);
                }

                if (selectedRestaurant.getMenu().getDessert() != null && !selectedRestaurant.getMenu().getDessert().isEmpty()) {
                    enableDessertRadioButtons(selectedRestaurant);
                }

                if (selectedRestaurant.getMenu().getBeverages() != null && !selectedRestaurant.getMenu().getBeverages().isEmpty()) {
                    enableBeverageRadioButtons(selectedRestaurant);
                }
            }
        }
    }//GEN-LAST:event_btnViewMenuActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        switchPanels(MainWorkArea);
        lblOnionRingsPrice.setText("- NA -");
        lblOnionRingsPrice.setForeground(new java.awt.Color(0, 102, 102));
        rdOnionRings1.setEnabled(false);

        lblSpinachPiePrice.setText("- NA -");
        lblSpinachPiePrice.setForeground(new java.awt.Color(0, 102, 102));
        rdSpinachPie1.setEnabled(false);

        lblSpringRolesPrice.setText("- NA -");
        lblSpringRolesPrice.setForeground(new java.awt.Color(0, 102, 102));
        rdSpringRoles1.setEnabled(false);

        lblMeatBallsPrice.setText("- NA -");
        lblMeatBallsPrice.setForeground(new java.awt.Color(0, 102, 102));
        rdMeatBalls1.setEnabled(false);

        lblsausageDipPrice.setText("- NA -");
        lblsausageDipPrice.setForeground(new java.awt.Color(0, 102, 102));
        rdSausageDip1.setEnabled(false);

        lblFriedShrimpPrice.setText("- NA -");
        lblFriedShrimpPrice.setForeground(new java.awt.Color(0, 102, 102));
        rdFriedShrimp1.setEnabled(false);

        lblWhiteBeanDipPrice.setText("- NA -");
        lblWhiteBeanDipPrice.setForeground(new java.awt.Color(0, 102, 102));
        rdWhiteBeanDip1.setEnabled(false);

        lblTortillaChipsPrice.setText("- NA -");
        lblTortillaChipsPrice.setForeground(new java.awt.Color(0, 102, 102));
        rdTortillaChips1.setEnabled(false);

        lblCrispyTofuPrice.setText("- NA -");
        lblCrispyTofuPrice.setForeground(new java.awt.Color(0, 102, 102));
        rdCrispyTofu1.setEnabled(false);

        lblCheeseBurgerPrice.setText("- NA -");
        lblCheeseBurgerPrice.setForeground(new java.awt.Color(0, 102, 102));
        rdCheeseBurger1.setEnabled(false);

        lblFriedRicePrice.setText("- NA -");
        lblFriedRicePrice.setForeground(new java.awt.Color(0, 102, 102));
        rdFriedRice1.setEnabled(false);

        lblVeggiePrice.setText("- NA -");
        lblVeggiePrice.setForeground(new java.awt.Color(0, 102, 102));
        rdVeggiePizza1.setEnabled(false);

        lblHamburgerPrice.setText("- NA -");
        lblHamburgerPrice.setForeground(new java.awt.Color(0, 102, 102));
        rdHamBurger1.setEnabled(false);

        lblFishNChipsPrice.setText("- NA -");
        lblFishNChipsPrice.setForeground(new java.awt.Color(0, 102, 102));
        rdFishNChips1.setEnabled(false);

        lblPrawnFriedRicePrice.setText("- NA -");
        lblPrawnFriedRicePrice.setForeground(new java.awt.Color(0, 102, 102));
        rdPrawnFriedRice1.setEnabled(false);

        lblTofuSaladPrice.setText("- NA -");
        lblTofuSaladPrice.setForeground(new java.awt.Color(0, 102, 102));
        rdTofuSalad1.setEnabled(false);

        lblFalafelBowlPrice.setText("- NA -");
        lblFalafelBowlPrice.setForeground(new java.awt.Color(0, 102, 102));
        rdFalafelBowl1.setEnabled(false);

        lblTofuRiceBowlPrice.setText("- NA -");
        lblTofuRiceBowlPrice.setForeground(new java.awt.Color(0, 102, 102));
        rdTofuAndRiceBowl1.setEnabled(false);

        lblBlackForestCakePrice.setText("- NA -");
        lblBlackForestCakePrice.setForeground(new java.awt.Color(0, 102, 102));
        rdBlackForestCake1.setEnabled(false);

        lblPineappleSwissRolePrice.setText("- NA -");
        lblPineappleSwissRolePrice.setForeground(new java.awt.Color(0, 102, 102));
        rdPineappleSwissRole1.setEnabled(false);

        lblChocolateMoussePrice.setText("- NA -");
        lblChocolateMoussePrice.setForeground(new java.awt.Color(0, 102, 102));
        rdChocolateMousse1.setEnabled(false);

        lblCocaColaPrice.setText("- NA -");
        lblCocaColaPrice.setForeground(new java.awt.Color(0, 102, 102));
        rdCocaCola1.setEnabled(false);

        lblFreshLimeSaltedPrice.setText("- NA -");
        lblFreshLimeSaltedPrice.setForeground(new java.awt.Color(0, 102, 102));
        rdFreshLimesalted1.setEnabled(false);

        lblPepsiPrice.setText("- NA -");
        lblPepsiPrice.setForeground(new java.awt.Color(0, 102, 102));
        rdPepsi1.setEnabled(false);
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void rdOnionRings1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdOnionRings1ActionPerformed

    }//GEN-LAST:event_rdOnionRings1ActionPerformed

    private void rdCheeseBurger1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdCheeseBurger1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdCheeseBurger1ActionPerformed

    private void btnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderActionPerformed
        Order order = orderDirectory.addOrder();
        order.setCustomerName(customer.getFirstName() + " " + customer.getLastName());
        order.setCustomerAddress(customer.getAddress());
        order.setRestaurantName(restaurantName);
        order.setFoodItems(foodItems);
        order.setStatus("PENDING");

        Calendar calendar = Calendar.getInstance();
        order.setOrderDateTime(calendar.getTime());

        Random randomNum = new Random();
        int randomOrderId = randomNum.nextInt(65536 - 32768);
        order.setId(randomOrderId);

        JOptionPane.showMessageDialog(null, "Order placed successfully!");
        switchPanels(MainWorkArea);
        finalizeOrder(order);
        business.setOrderDirectory(orderDirectory);
        populateOrders();
    }//GEN-LAST:event_btnOrderActionPerformed

    private void tglOrdersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglOrdersActionPerformed
        if (tglOrders.isSelected()) {
            pnlOrderTable.setVisible(true);
            btnAddReview.setVisible(true);
            btnCancelOrder.setVisible(true);
            btnRateOrder.setVisible(true);
        } else {
            pnlOrderTable.setVisible(false);
            btnAddReview.setVisible(false);
            btnCancelOrder.setVisible(false);
            btnRateOrder.setVisible(false);
        }
    }//GEN-LAST:event_tglOrdersActionPerformed

    private void btnAddReviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddReviewActionPerformed
        int selectedRowIndex = tblOrders.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select an Order.");
            return;
        } else {
            DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();
            Order selectedOrder = (Order) model.getValueAt(selectedRowIndex, 0);
            orderId = selectedOrder.getId();
            txtOrderId.setText(String.valueOf(orderId));
            switchPanels(FeedbackPanel);
        }
    }//GEN-LAST:event_btnAddReviewActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        switchPanels(MainWorkArea);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnSubmitFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitFeedbackActionPerformed
        Order order = orderDirectory.findOrder(orderId);
        HashMap<String, String> feedbackMap = new HashMap<>();
        feedbackMap.put(String.valueOf(order.getId()), txtFeedback.getText());
        order.setReviewComments(feedbackMap);

        for (int i = 0; i <= orderDirectory.getOrders().size() - 1; i++) {
            if (orderDirectory.getOrders().get(i).getId() == order.getId()) {
                orderDirectory.getOrders().set(i, order);
            }
        }

        JOptionPane.showMessageDialog(null, "Feedback submitted successfully!");
        switchPanels(MainWorkArea);
        txtFeedback.setText("");
    }//GEN-LAST:event_btnSubmitFeedbackActionPerformed

    private void btnCancelOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelOrderActionPerformed
        int selectedRowIndex = tblOrders.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select an Order.");
            return;
        } else {
            DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();
            Order selectedOrder = (Order) model.getValueAt(selectedRowIndex, 0);
            orderDirectory.removeOrderByOrderId(selectedOrder.getId());
            populateOrders();
        }
    }//GEN-LAST:event_btnCancelOrderActionPerformed

    private void btnRateOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRateOrderActionPerformed
        int selectedRowIndex = tblOrders.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select an Order.");
            return;
        } else {
            DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();
            Order selectedOrder = (Order) model.getValueAt(selectedRowIndex, 0);
            if (!selectedOrder.getStatus().equals("DELIVERED")) {
                JOptionPane.showMessageDialog(this, "This order is not delivered yet.");
                return;
            } else {
                switchPanels(RateOrderPanel);
                lblHeading1.setText("Rate Order " + selectedOrder.getId());
                flags.setId(selectedOrder.getId());
            }
        }
    }//GEN-LAST:event_btnRateOrderActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        switchPanels(MainWorkArea);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void rd5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rd5ActionPerformed
        rd4.setSelected(false);
        rd3.setSelected(false);
        rd2.setSelected(false);
        rd1.setSelected(false);
    }//GEN-LAST:event_rd5ActionPerformed

    private void rd4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rd4ActionPerformed
        rd5.setSelected(false);
        rd3.setSelected(false);
        rd2.setSelected(false);
        rd1.setSelected(false);
    }//GEN-LAST:event_rd4ActionPerformed

    private void rd3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rd3ActionPerformed
        rd5.setSelected(false);
        rd4.setSelected(false);
        rd2.setSelected(false);
        rd1.setSelected(false);        rd1.setSelected(false);        rd1.setSelected(false);    }//GEN-LAST:event_rd3ActionPerformed

    private void rd2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rd2ActionPerformed
        rd5.setSelected(false);
        rd4.setSelected(false);
        rd3.setSelected(false);
        rd1.setSelected(false);         rd1.setSelected(false);         rd1.setSelected(false);     }//GEN-LAST:event_rd2ActionPerformed

    private void rd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rd1ActionPerformed
        rd5.setSelected(false);
        rd4.setSelected(false);
        rd3.setSelected(false);
        rd2.setSelected(false);        rd2.setSelected(false);        rd2.setSelected(false);    }//GEN-LAST:event_rd1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Order order = orderDirectory.findOrder(flags.getId());
        int rating = 0;

        if (rd5.isSelected()) {
            rating = 5;
        } else if (rd4.isSelected()) {
            rating = 4;
        } else if (rd3.isSelected()) {
            rating = 3;
        } else if (rd2.isSelected()) {
            rating = 2;
        } else {
            rating = 1;
        }

        order.setOrderRating(rating);

        for (int i = 0; i <= orderDirectory.getOrders().size() - 1; i++) {
            if (orderDirectory.getOrders().get(i).getId() == flags.getId()) {
                orderDirectory.getOrders().set(i, order);
            }
        }

        JOptionPane.showMessageDialog(null, "Rating submitted successfully.");
        switchPanels(MainWorkArea);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnEditProfileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditProfileMouseEntered
        btnEditProfile.setBackground(new Color(112, 143, 143));
    }//GEN-LAST:event_btnEditProfileMouseEntered

    private void btnEditProfileMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditProfileMouseExited
        btnEditProfile.setBackground(new Color(206, 217, 217));
    }//GEN-LAST:event_btnEditProfileMouseExited

    private void tglOrdersMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tglOrdersMouseEntered
        tglOrders.setBackground(new Color(112, 143, 143));
    }//GEN-LAST:event_tglOrdersMouseEntered

    private void tglOrdersMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tglOrdersMouseExited
        tglOrders.setBackground(new Color(206, 217, 217));
    }//GEN-LAST:event_tglOrdersMouseExited

    private void btnAddReviewMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddReviewMouseEntered
        btnAddReview.setBackground(new Color(194, 240, 194));
    }//GEN-LAST:event_btnAddReviewMouseEntered

    private void btnAddReviewMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddReviewMouseExited
        btnAddReview.setBackground(Color.white);
    }//GEN-LAST:event_btnAddReviewMouseExited

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressActionPerformed

    private void switchPanels(Component component) {
        jLayeredPane1.removeAll();
        jLayeredPane1.add(component);
        jLayeredPane1.revalidate();
        jLayeredPane1.repaint();
    }

    private void disableRadioButtons() {
        rdOnionRings1.setEnabled(false);
        rdSpinachPie1.setEnabled(false);
        rdSpringRoles1.setEnabled(false);
        rdMeatBalls1.setEnabled(false);
        rdSausageDip1.setEnabled(false);
        rdFriedShrimp1.setEnabled(false);
        rdWhiteBeanDip1.setEnabled(false);
        rdTortillaChips1.setEnabled(false);
        rdCrispyTofu1.setEnabled(false);

        rdCheeseBurger1.setEnabled(false);
        rdFriedRice1.setEnabled(false);
        rdVeggiePizza1.setEnabled(false);
        rdHamBurger1.setEnabled(false);
        rdFishNChips1.setEnabled(false);
        rdPrawnFriedRice1.setEnabled(false);
        rdTofuSalad1.setEnabled(false);
        rdFalafelBowl1.setEnabled(false);
        rdTofuAndRiceBowl1.setEnabled(false);

        rdBlackForestCake1.setEnabled(false);
        rdPineappleSwissRole1.setEnabled(false);
        rdChocolateMousse1.setEnabled(false);

        rdCocaCola1.setEnabled(false);
        rdFreshLimesalted1.setEnabled(false);
        rdPepsi1.setEnabled(false);
    }

    /**
     * Enable Appetizer buttons based on what is available
     *
     * @param selectedRestaurant
     */
    private void enableAppetizerRadioButtons(Restaurant selectedRestaurant) {
        for (Map.Entry<String, Integer> appetizerMap : selectedRestaurant.getMenu().getApetizers().entrySet()) {
            if (appetizerMap.getKey().equals("Onion Rings")) {
                rdOnionRings1.setEnabled(true);
                lblOnionRingsPrice.setText("- " + appetizerMap.getValue() + "$");
                lblOnionRingsPrice.setForeground(Color.decode("#fc7703"));
            }

            if (appetizerMap.getKey().equals("Spinach Pie")) {
                rdSpinachPie1.setEnabled(true);
                lblSpinachPiePrice.setText("- " + appetizerMap.getValue() + "$");
                lblSpinachPiePrice.setForeground(Color.decode("#fc7703"));
            }

            if (appetizerMap.getKey().equals("Spring Roles")) {
                rdSpringRoles1.setEnabled(true);
                lblSpringRolesPrice.setText("- " + appetizerMap.getValue() + "$");
                lblSpringRolesPrice.setForeground(Color.decode("#fc7703"));
            }

            if (appetizerMap.getKey().equals("Meat Balls")) {
                rdMeatBalls1.setEnabled(true);
                lblMeatBallsPrice.setText("- " + appetizerMap.getValue() + "$");
                lblMeatBallsPrice.setForeground(Color.decode("#fc7703"));
            }

            if (appetizerMap.getKey().equals("Sausage Dip")) {
                rdSausageDip1.setEnabled(true);
                lblsausageDipPrice.setText("- " + appetizerMap.getValue() + "$");
                lblsausageDipPrice.setForeground(Color.decode("#fc7703"));
            }

            if (appetizerMap.getKey().equals("Fried Shrimp")) {
                rdFriedShrimp1.setEnabled(true);
                lblFriedShrimpPrice.setText("- " + appetizerMap.getValue() + "$");
                lblFriedShrimpPrice.setForeground(Color.decode("#fc7703"));
            }

            if (appetizerMap.getKey().equals("White Bean Dip")) {
                rdWhiteBeanDip1.setEnabled(true);
                lblWhiteBeanDipPrice.setText("- " + appetizerMap.getValue() + "$");
                lblWhiteBeanDipPrice.setForeground(Color.decode("#fc7703"));
            }

            if (appetizerMap.getKey().equals("Tortilla Chips")) {
                rdTortillaChips1.setEnabled(true);
                lblTortillaChipsPrice.setText("- " + appetizerMap.getValue() + "$");
                lblTortillaChipsPrice.setForeground(Color.decode("#fc7703"));
            }

            if (appetizerMap.getKey().equals("Crispy Tofu")) {
                rdCrispyTofu1.setEnabled(true);
                lblCrispyTofuPrice.setText("- " + appetizerMap.getValue() + "$");
                lblCrispyTofuPrice.setForeground(Color.decode("#fc7703"));
            }
        }
    }

    /**
     * Enable Mains buttons based on what is available
     *
     * @param selectedRestaurant
     */
    private void enableMainsRadioButtons(Restaurant selectedRestaurant) {
        for (Map.Entry<String, Integer> mainsrMap : selectedRestaurant.getMenu().getMains().entrySet()) {
            if (mainsrMap.getKey().equals("Cheese Burger")) {
                rdCheeseBurger1.setEnabled(true);
                lblCheeseBurgerPrice.setText("- " + mainsrMap.getValue() + "$");
                lblCheeseBurgerPrice.setForeground(Color.decode("#fc7703"));
            }

            if (mainsrMap.getKey().equals("Fried Rice")) {
                rdFriedRice1.setEnabled(true);
                lblFriedRicePrice.setText("- " + mainsrMap.getValue() + "$");
                lblFriedRicePrice.setForeground(Color.decode("#fc7703"));
            }

            if (mainsrMap.getKey().equals("Veggie Pizza")) {
                rdVeggiePizza1.setEnabled(true);
                lblVeggiePrice.setText("- " + mainsrMap.getValue() + "$");
                lblVeggiePrice.setForeground(Color.decode("#fc7703"));
            }

            if (mainsrMap.getKey().equals("Ham Burger")) {
                rdHamBurger1.setEnabled(true);
                lblHamburgerPrice.setText("- " + mainsrMap.getValue() + "$");
                lblHamburgerPrice.setForeground(Color.decode("#fc7703"));
            }

            if (mainsrMap.getKey().equals("Fish N' Chips")) {
                rdFishNChips1.setEnabled(true);
                lblFishNChipsPrice.setText("- " + mainsrMap.getValue() + "$");
                lblFishNChipsPrice.setForeground(Color.decode("#fc7703"));
            }

            if (mainsrMap.getKey().equals("Prawn Fried Rice")) {
                rdPrawnFriedRice1.setEnabled(true);
                lblPrawnFriedRicePrice.setText("- " + mainsrMap.getValue() + "$");
                lblPrawnFriedRicePrice.setForeground(Color.decode("#fc7703"));
            }

            if (mainsrMap.getKey().equals("Tofu Salad")) {
                rdTofuSalad1.setEnabled(true);
                lblTofuSaladPrice.setText("- " + mainsrMap.getValue() + "$");
                lblTofuSaladPrice.setForeground(Color.decode("#fc7703"));
            }

            if (mainsrMap.getKey().equals("Falafel Bowl")) {
                rdFalafelBowl1.setEnabled(true);
                lblFalafelBowlPrice.setText("- " + mainsrMap.getValue() + "$");
                lblFalafelBowlPrice.setForeground(Color.decode("#fc7703"));
            }

            if (mainsrMap.getKey().equals("Tofu & Rice Platter")) {
                rdTofuAndRiceBowl1.setEnabled(true);
                lblTofuRiceBowlPrice.setText("- " + mainsrMap.getValue() + "$");
                lblTofuRiceBowlPrice.setForeground(Color.decode("#fc7703"));
            }
        }
    }

    /**
     * Enable Dessert buttons based on what is available
     *
     * @param selectedRestaurant
     */
    private void enableDessertRadioButtons(Restaurant selectedRestaurant) {
        for (Map.Entry<String, Integer> dessertMap : selectedRestaurant.getMenu().getDessert().entrySet()) {
            if (dessertMap.getKey().equals("Black Forest Cake")) {
                rdBlackForestCake1.setEnabled(true);
                lblBlackForestCakePrice.setText("- " + dessertMap.getValue() + "$");
                lblBlackForestCakePrice.setForeground(Color.decode("#fc7703"));
//                totalCost = totalCost + dessertMap.getValue();
//                foodItems.add(dessertMap.getKey());
            }

            if (dessertMap.getKey().equals("Pineapple Swiss Role")) {
                rdPineappleSwissRole1.setEnabled(true);
                lblPineappleSwissRolePrice.setText("- " + dessertMap.getValue() + "$");
                lblPineappleSwissRolePrice.setForeground(Color.decode("#fc7703"));
//                totalCost = totalCost + dessertMap.getValue();
//                foodItems.add(dessertMap.getKey());
            }

            if (dessertMap.getKey().equals("Chocolate Mousse")) {
                rdChocolateMousse1.setEnabled(true);
                lblChocolateMoussePrice.setText("- " + dessertMap.getValue() + "$");
                lblChocolateMoussePrice.setForeground(Color.decode("#fc7703"));
//                totalCost = totalCost + dessertMap.getValue();
//                foodItems.add(dessertMap.getKey());
            }
        }
    }

    /**
     * Enable Beverage buttons based on what is available
     *
     * @param selectedRestaurant
     */
    private void enableBeverageRadioButtons(Restaurant selectedRestaurant) {
        for (Map.Entry<String, Integer> beverageMap : selectedRestaurant.getMenu().getBeverages().entrySet()) {
            if (beverageMap.getKey().equals("CocaCola")) {
                rdCocaCola1.setEnabled(true);
                lblCocaColaPrice.setText("- " + beverageMap.getValue() + "$");
                lblCocaColaPrice.setForeground(Color.decode("#fc7703"));
//                totalCost = totalCost + beverageMap.getValue();
//                foodItems.add(beverageMap.getKey());
            }

            if (beverageMap.getKey().equals("Fresh Lime Salted")) {
                rdFreshLimesalted1.setEnabled(true);
                lblFreshLimeSaltedPrice.setText("- " + beverageMap.getValue() + "$");
                lblFreshLimeSaltedPrice.setForeground(Color.decode("#fc7703"));
//                totalCost = totalCost + beverageMap.getValue();
//                foodItems.add(beverageMap.getKey());
            }

            if (beverageMap.getKey().equals("Pepsi")) {
                rdPepsi1.setEnabled(true);
                lblPepsiPrice.setText("- " + beverageMap.getValue() + "$");
                lblPepsiPrice.setForeground(Color.decode("#fc7703"));
//                totalCost = totalCost + beverageMap.getValue();
//                foodItems.add(beverageMap.getKey());
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel EditProfilePanel;
    private javax.swing.JPanel FeedbackPanel;
    private javax.swing.JPanel MainWorkArea;
    private javax.swing.JPanel OrderPanel;
    private javax.swing.JPanel RateOrderPanel;
    private javax.swing.JButton btnAddReview;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnCancelOrder;
    private javax.swing.JButton btnEditProfile;
    private javax.swing.JButton btnOrder;
    private javax.swing.JButton btnRateOrder;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSubmitFeedback;
    private javax.swing.JButton btnViewMenu;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel lbBeverages1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblApetizers1;
    private javax.swing.JLabel lblAptNonVeg1;
    private javax.swing.JLabel lblAptVeg1;
    private javax.swing.JLabel lblAptVegan1;
    private javax.swing.JLabel lblAptVegan2;
    private javax.swing.JLabel lblBlackForestCakePrice;
    private javax.swing.JLabel lblCheeseBurgerPrice;
    private javax.swing.JLabel lblChocolateMoussePrice;
    private javax.swing.JLabel lblCocaColaPrice;
    private javax.swing.JLabel lblCrispyTofuPrice;
    private javax.swing.JLabel lblDesserts1;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFalafelBowlPrice;
    private javax.swing.JLabel lblFeedback;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblFishNChipsPrice;
    private javax.swing.JLabel lblFreshLimeSaltedPrice;
    private javax.swing.JLabel lblFriedRicePrice;
    private javax.swing.JLabel lblFriedShrimpPrice;
    private javax.swing.JLabel lblGreeting;
    private javax.swing.JLabel lblHamburgerPrice;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblHeader1;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblHeading1;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblMains1;
    private javax.swing.JLabel lblMainsNonVeg1;
    private javax.swing.JLabel lblMainsVeg1;
    private javax.swing.JLabel lblMeatBallsPrice;
    private javax.swing.JLabel lblMobileNum;
    private javax.swing.JLabel lblOnionRingsPrice;
    private javax.swing.JLabel lblOrderId;
    private javax.swing.JLabel lblPepsiPrice;
    private javax.swing.JLabel lblPineappleSwissRolePrice;
    private javax.swing.JLabel lblPrawnFriedRicePrice;
    private javax.swing.JLabel lblSpinachPiePrice;
    private javax.swing.JLabel lblSpringRolesPrice;
    private javax.swing.JLabel lblTofuRiceBowlPrice;
    private javax.swing.JLabel lblTofuSaladPrice;
    private javax.swing.JLabel lblTortillaChipsPrice;
    private javax.swing.JLabel lblVeggiePrice;
    private javax.swing.JLabel lblWhiteBeanDipPrice;
    private javax.swing.JLabel lblsausageDipPrice;
    private javax.swing.JPanel navigationPanel;
    private javax.swing.JPanel pnlOrderTable;
    private javax.swing.JPanel pnlTable;
    private javax.swing.JRadioButton rd1;
    private javax.swing.JRadioButton rd2;
    private javax.swing.JRadioButton rd3;
    private javax.swing.JRadioButton rd4;
    private javax.swing.JRadioButton rd5;
    private javax.swing.JRadioButton rdBlackForestCake1;
    private javax.swing.JRadioButton rdCheeseBurger1;
    private javax.swing.JRadioButton rdChocolateMousse1;
    private javax.swing.JRadioButton rdCocaCola1;
    private javax.swing.JRadioButton rdCrispyTofu1;
    private javax.swing.JRadioButton rdFalafelBowl1;
    private javax.swing.JRadioButton rdFishNChips1;
    private javax.swing.JRadioButton rdFreshLimesalted1;
    private javax.swing.JRadioButton rdFriedRice1;
    private javax.swing.JRadioButton rdFriedShrimp1;
    private javax.swing.JRadioButton rdHamBurger1;
    private javax.swing.JRadioButton rdMeatBalls1;
    private javax.swing.JRadioButton rdOnionRings1;
    private javax.swing.JRadioButton rdPepsi1;
    private javax.swing.JRadioButton rdPineappleSwissRole1;
    private javax.swing.JRadioButton rdPrawnFriedRice1;
    private javax.swing.JRadioButton rdSausageDip1;
    private javax.swing.JRadioButton rdSpinachPie1;
    private javax.swing.JRadioButton rdSpringRoles1;
    private javax.swing.JRadioButton rdTofuAndRiceBowl1;
    private javax.swing.JRadioButton rdTofuSalad1;
    private javax.swing.JRadioButton rdTortillaChips1;
    private javax.swing.JRadioButton rdVeggiePizza1;
    private javax.swing.JRadioButton rdWhiteBeanDip1;
    private javax.swing.JTable tblOrders;
    private javax.swing.JTable tblRestaurants;
    private javax.swing.JToggleButton tglOrders;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFeedback;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMobileNum;
    private javax.swing.JTextField txtOrderId;
    // End of variables declaration//GEN-END:variables

    private void populateRestaurants() {
        DefaultTableModel model = (DefaultTableModel) tblRestaurants.getModel();
        model.setRowCount(0);

        for (Restaurant restaurant : restaurantDirectory.getRestaurants()) {
            if (restaurant.getName() != null && !restaurant.getName().isBlank() && !restaurant.getName().isEmpty()) {
                Object[] row = new Object[6];
                row[0] = restaurant;
                row[1] = restaurant.getAddress();
                row[2] = restaurant.getCuisine();
                row[3] = restaurant.getVegOrNonVeg();
                row[4] = restaurant.getPhoneNumber();
                row[5] = restaurant.getEmailId();
                model.addRow(row);
            }
        }
    }

    private void populateOrders() {
        DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();
        model.setRowCount(0);

        for (Order order : orderDirectory.getOrders()) {
            if (order.getCustomerName().equals(customer.getFirstName() + " " + customer.getLastName())) {
                Object[] row = new Object[7];
                row[0] = order;
                row[1] = order.getRestaurantName();
                row[2] = order.getCost() + "$";
                row[3] = order.getOrderDateTime();
                row[4] = order.getStatus();

                if (order.getDeliveryStaffName() != null && !order.getDeliveryStaffName().isBlank() && !order.getDeliveryStaffName().isEmpty()) {
                    row[5] = order.getDeliveryStaffName().toUpperCase();
                } else {
                    row[5] = "- NA -";
                }

                if (order.getCustomerAddress() != null && !order.getCustomerAddress().isBlank() && !order.getCustomerAddress().isEmpty()) {
                    row[6] = order.getCustomerAddress();
                } else {
                    row[6] = "- NA -";
                }

                model.addRow(row);
            }
        }
    }

    private void finalizeOrder(Order order) {
        if (rdOnionRings1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblOnionRingsPrice.getText().substring(2, lblOnionRingsPrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdOnionRings1.getText());
        }

        if (rdSpinachPie1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblSpinachPiePrice.getText().substring(2, lblSpinachPiePrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdSpinachPie1.getText());
        }

        if (rdSpringRoles1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblSpringRolesPrice.getText().substring(2, lblSpringRolesPrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdSpringRoles1.getText());
        }

        if (rdMeatBalls1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblMeatBallsPrice.getText().substring(2, lblMeatBallsPrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdMeatBalls1.getText());
        }

        if (rdSausageDip1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblsausageDipPrice.getText().substring(2, lblsausageDipPrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdSausageDip1.getText());
        }

        if (rdFriedShrimp1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblFriedShrimpPrice.getText().substring(2, lblFriedShrimpPrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdFriedShrimp1.getText());
        }

        if (rdWhiteBeanDip1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblWhiteBeanDipPrice.getText().substring(2, lblWhiteBeanDipPrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdWhiteBeanDip1.getText());
        }

        if (rdTortillaChips1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblTortillaChipsPrice.getText().substring(2, lblTortillaChipsPrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdTortillaChips1.getText());
        }

        if (rdCrispyTofu1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblCrispyTofuPrice.getText().substring(2, lblCrispyTofuPrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdCrispyTofu1.getText());
        }

        if (rdCheeseBurger1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblCheeseBurgerPrice.getText().substring(2, lblCheeseBurgerPrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdCheeseBurger1.getText());
        }
        if (rdFriedRice1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblFriedRicePrice.getText().substring(2, lblFriedRicePrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdFriedRice1.getText());
        }
        if (rdVeggiePizza1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblVeggiePrice.getText().substring(2, lblVeggiePrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdCrispyTofu1.getText());
        }
        if (rdHamBurger1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblHamburgerPrice.getText().substring(2, lblHamburgerPrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdHamBurger1.getText());
        }
        if (rdFishNChips1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblFishNChipsPrice.getText().substring(2, lblFishNChipsPrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdFishNChips1.getText());
        }
        if (rdPrawnFriedRice1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblPrawnFriedRicePrice.getText().substring(2, lblPrawnFriedRicePrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdPrawnFriedRice1.getText());
        }
        if (rdTofuSalad1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblTofuSaladPrice.getText().substring(2, lblTofuSaladPrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdTofuSalad1.getText());
        }
        if (rdFalafelBowl1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblFalafelBowlPrice.getText().substring(2, lblFalafelBowlPrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdFalafelBowl1.getText());
        }
        if (rdTofuAndRiceBowl1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblTofuRiceBowlPrice.getText().substring(2, lblTofuRiceBowlPrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdTofuAndRiceBowl1.getText());
        }

        if (rdBlackForestCake1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblBlackForestCakePrice.getText().substring(2, lblBlackForestCakePrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdBlackForestCake1.getText());
        }

        if (rdPineappleSwissRole1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblPineappleSwissRolePrice.getText().substring(2, lblPineappleSwissRolePrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdPineappleSwissRole1.getText());
        }

        if (rdChocolateMousse1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblChocolateMoussePrice.getText().substring(2, lblChocolateMoussePrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdChocolateMousse1.getText());
        }

        if (rdCocaCola1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblCocaColaPrice.getText().substring(2, lblCocaColaPrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdCocaCola1.getText());
        }

        if (rdFreshLimesalted1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblFreshLimeSaltedPrice.getText().substring(2, lblFreshLimeSaltedPrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdFreshLimesalted1.getText());
        }

        if (rdPepsi1.isSelected()) {
            totalCost = totalCost + Integer.parseInt(lblPepsiPrice.getText().substring(2, lblPepsiPrice.getText().indexOf("$")));
            order.setCost(totalCost);
            foodItems.add(rdPepsi1.getText());
        }
    }

    private boolean validations() {

        boolean validData = true;

        if (txtFirstName.getText().isBlank() || txtFirstName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "First Name is blank, enter some data!");
            validData = false;
            return validData;
        } // validate the address line 1 field
        else if (txtLastName.getText().isBlank() || txtLastName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Last is blank, enter some data!");
            validData = false;
            return validData;
        } else if (!emailValidate(txtEmail.getText())) {
            JOptionPane.showMessageDialog(this, "Enter a valid EmailID!");
            validData = false;
            return validData;
        } else if (!teleNumValidate(txtMobileNum.getText())) {
            JOptionPane.showMessageDialog(this, "Enter a valid Phone Number!");
            validData = false;
            return validData;
        } else if (txtAddress.getText().isBlank() || txtAddress.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Address is blank, enter some data!!");
            validData = false;
            return validData;
        } else {
            return true;
        }
    }

    private boolean emailValidate(String email) {
        if (email.isBlank() || email.isEmpty()) {
            return false;
        } else if (!email.isBlank() && !email.isEmpty() && !email.contains("@")) {
            return false;
        } else if (!email.isBlank() && !email.isEmpty() && !email.contains(".com")) {
            return false;
        }
        return true;
    }

    private boolean teleNumValidate(String teleNumString) {
        if (teleNumString.isBlank() || teleNumString.isEmpty()) {
            return false;
        } else if (!teleNumString.isBlank() && !teleNumString.isEmpty() && teleNumString.trim().length() != 10) {
            return false;
        }
        return true;
    }
}
